Pending: (Failures listed here are expected and do not affect your suite's status)

  1) Standalone Virt-Limit Subscriptions should attach host provided pools before other available pools
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:49

  2) Standalone Virt-Limit Subscriptions should create a virt_only pool for hosts guests
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:137

  3) Standalone Virt-Limit Subscriptions should list host restricted pool only for its guests
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:152

  4) Standalone Virt-Limit Subscriptions should check arch matches and guest_limit enforced on restricted subpools
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:161

  5) Standalone Virt-Limit Subscriptions should revoke guest entitlements when migration happens
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:200

  6) Standalone Virt-Limit Subscriptions should revoke guest entitlements when host unbinds
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:223

  7) Standalone Virt-Limit Subscriptions should revoke guest entitlements when host unregisters
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:233

  8) Standalone Virt-Limit Subscriptions should revoke guest entitlements and remove activation keys when host unbinds
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:248

  9) Standalone Virt-Limit Subscriptions should not revoke guest entitlements when host stops reporting guest ID
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:260

  10) Standalone Virt-Limit Subscriptions should not revoke guest entitlements when host removes guest ID through new api
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:271

  11) Standalone Virt-Limit Subscriptions should lose entitlement when guest stops and is restarted elsewhere
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:283

  12) Standalone Virt-Limit Subscriptions should auto-heal when guest is migrated to another host
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:295

  13) Standalone Virt-Limit Subscriptions should heal the host before healing itself
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:340

  14) Standalone Virt-Limit Subscriptions should not bind products on host if virt_only are already available for guest
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:365

  15) Standalone Virt-Limit Subscriptions should not heal host if nothing is installed
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:393

  16) Standalone Virt-Limit Subscriptions should not heal the host if the product is already compliant
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:418

  17) Standalone Virt-Limit Subscriptions should not heal other host products
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:453

  18) Standalone Virt-Limit Subscriptions should not autobind virt-limiting products that do not cover guests
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:483

  19) Standalone Virt-Limit Subscriptions should autobind virt-limiting products that do cover guests
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:503

  20) Standalone Virt-Limit Subscriptions should not change the quantity on sub-pool when the source entitlement quantity changes
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:522

  21) Standalone Virt-Limit Subscriptions should not block a virt guest
     # candlepin running in standalone mode
     # ./server/spec/virt_spec.rb:558

  22) Owner Content Resource should force entitlements providing changed content to be regenerated
     # candlepin running in hosted mode
     # ./server/spec/owner_content_resource_spec.rb:111

  23) One Sub Pool Per Stack should create one sub pool when host binds to stackable virt_limit pool
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:159

  24) One Sub Pool Per Stack should not include host entitlements from another stack
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:177

  25) One Sub Pool Per Stack should delete sub pool when all host entitlements are removed from the stack
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:187

  26) One Sub Pool Per Stack should update sub pool date range when another stacked entitlement is added
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:204

  27) One Sub Pool Per Stack should update product data on adding entitlement of same stack
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:215

  28) One Sub Pool Per Stack should update provided products when stacked entitlements change
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:243

  29) One Sub Pool Per Stack should include derived provided products if supporting entitlements are in stack
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:265

  30) One Sub Pool Per Stack should update product data on removing entitlement of same stack
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:290

  31) One Sub Pool Per Stack should not update product data from products not in the stack
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:304

  32) One Sub Pool Per Stack should revoke guest entitlement from sub pool when last host ent in stack is removed
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:316

  33) One Sub Pool Per Stack should remove guest entitlement when host unregisters
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:337

  34) One Sub Pool Per Stack should remove guest entitlement when guest is migrated
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:355

  35) One Sub Pool Per Stack should update guest sub pool ent as host stack is updated
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:401

  36) One Sub Pool Per Stack should update quantity of sub pool when stack changes
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:428

  37) One Sub Pool Per Stack should regenerate ent certs when sub pool is update and client checks in
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:450

  38) One Sub Pool Per Stack should not regenerate certs on refresh pools when sub pool has not been changed
     # candlepin running in standalone mode
     # ./server/spec/one_sub_pool_per_stack_spec.rb:478

  39) Pool Resource should allow fetching content delivery network by pool id
     # candlepin running in hosted mode
     # ./server/spec/pool_resource_spec.rb:199

  40) Pool Resource dispatches the correct number of events
     # candlepin running in hosted mode
     # ./server/spec/pool_resource_spec.rb:225

  41) Scheduled Jobs should purge import records
     # candlepin running in hosted mode
     # ./server/spec/job_schedule_spec.rb:45

  42) Import cleanup should remove stack derived pool when parent ent is gone
     # candlepin running in hosted mode
     # ./server/spec/import_cleanup_spec.rb:41

  43) Hypervisor Resource should add consumer to created when new host id and no guests reported
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:42

  44) Hypervisor Resource should not deadlock when two synchronous hypervisor checkins are performed
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:49

  45) Hypervisor Resource should add consumer to created when new host id and no guests reported - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:106

  46) Hypervisor Resource should add consumer to created when new host id and guests were reported
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:143

  47) Hypervisor Resource should add consumer to created when new host id and guests were reported - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:150

  48) Hypervisor Resource should not add new consumer when create_missing is false
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:174

  49) Hypervisor Resource should not add new consumer when create_missing is false - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:181

  50) Hypervisor Resource should add consumer to updated when guest ids are updated
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:198

  51) Hypervisor Resource should add consumer to updated when guest ids are updated - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:207

  52) Hypervisor Resource should add consumer to unchanged when same guest ids are sent
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:233

  53) Hypervisor Resource should add consumer to unchanged when same guest ids are sent - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:240

  54) Hypervisor Resource should add consumer to unchanged when comparing empty guest id lists
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:264

  55) Hypervisor Resource should add consumer to unchanged when comparing empty guest id lists - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:276

  56) Hypervisor Resource should add host and associate guests
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:300

  57) Hypervisor Resource should update host guest ids as consumer
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:305

  58) Hypervisor Resource should update host guest ids as consumer - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:309

  59) Hypervisor Resource should persist reporter id on host guest mappings update - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:313

  60) Hypervisor Resource should update host guest ids as user
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:317

  61) Hypervisor Resource should update host guest ids as user - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:321

  62) Hypervisor Resource should not revoke guest entitlements when guest no longer registered
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:325

  63) Hypervisor Resource should not revoke guest entitlements when guest no longer registered - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:337

  64) Hypervisor Resource should not revoke host entitlements when guestId list is empty
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:357

  65) Hypervisor Resource should not revoke host entitlements when guestId list is empty - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:365

  66) Hypervisor Resource should not revoke host and guest entitlements when guestId list is empty
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:379

  67) Hypervisor Resource should not revoke host and guest entitlements when guestId list is empty - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:390

  68) Hypervisor Resource should initialize guest ids to empty when creating new host
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:410

  69) Hypervisor Resource should initialize guest ids to empty when creating new host - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:418

  70) Hypervisor Resource should support multiple orgs reporting the same cluster
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:426

  71) Hypervisor Resource should support multiple orgs reporting the same cluster - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:452

  72) Hypervisor Resource should allow virt-who to update mappings
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:516

  73) Hypervisor Resource should allow virt-who to update mappings - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:528

  74) Hypervisor Resource should block virt-who if owner does not match identity cert
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:539

  75) Hypervisor Resource should block virt-who if owner does not match identity cert - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:547

  76) Hypervisor Resource should raise bad request exception if mapping was not provided
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:559

  77) Hypervisor Resource should raise bad request exception if mapping was not provided - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:566

  78) Hypervisor Resource should see the capability that corresponds to the async method
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:573

  79) Hypervisor Resource should ignore hypervisorIds equal to the empty string
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:578

  80) Hypervisor Resource should ignore hypervisorIds equal to the empty string - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:590

  81) Hypervisor Resource should ignore guestIds equal to the empty string
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:602

  82) Hypervisor Resource should ignore guestIds equal to the empty string - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:617

  83) Hypervisor Resource should allow a single guest to be migrated and revoke host-limited ents
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:719

  84) Hypervisor Resource should allow a single guest to be migrated and revoke host-limited ents - async
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:778

  85) Hypervisor Resource should raise bad request exception if owner has autobind disabled
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:836

  86) Hypervisor Resource should fail update job when autobind is disabled for owner
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:851

  87) Hypervisor Resource Hypervisor Checkin should complete succesfully when a guest with host specific entitlement is migrated
     # candlepin running in standalone mode
     # ./server/spec/hypervisor_check_in_spec.rb:871

  88) Multi Org Shares uses a host-restricted pool from the sharing org
     # candlepin running in hosted mode
     # ./server/spec/multi_org_spec.rb:704

  89) Multi Org Shares does not force a heal in the sharing organization
     # candlepin running in hosted mode
     # ./server/spec/multi_org_spec.rb:774

  90) Import Warning warns about inactive subscriptions
     # candlepin running in hosted mode
     # ./server/spec/import_warning_spec.rb:35

  91) Import Warning warns about no active subscriptions
     # candlepin running in hosted mode
     # ./server/spec/import_warning_spec.rb:82

  92) Import Test Group: Async Tests it should behave like importer creates pools
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:71

  93) Import Test Group: Async Tests it should behave like importer ignores multiplier for pool quantity
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:92

  94) Import Test Group: Async Tests it should behave like importer modifies owner to reference upstream consumer
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:106

  95) Import Test Group: Async Tests it should behave like importer originating information should be populated in the import record
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:111

  96) Import Test Group: Async Tests it should behave like importer can be undone
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:123

  97) Import Test Group: Async Tests it should behave like importer should create a SUCCESS record of the import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:164

  98) Import Test Group: Async Tests it should behave like importer should create a DELETE record on a deleted import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:171

  99) Import Test Group: Async Tests it should behave like importer should return a 409 on a duplicate import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:181

  100) Import Test Group: Async Tests it should behave like importer should not allow importing an old manifest
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:201

  101) Import Test Group: Async Tests it should behave like importer should create a FAILURE record on a duplicate import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:231

  102) Import Test Group: Async Tests it should behave like importer should set the correct error status message
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:239

  103) Import Test Group: Async Tests it should behave like importer should allow forcing the same manifest
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:248

  104) Import Test Group: Async Tests it should behave like importer should allow importing older manifests into another owner
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:254

  105) Import Test Group: Async Tests it should behave like importer should return 409 when importing manifest from different subscription management application
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:269

  106) Import Test Group: Async Tests it should behave like importer should allow forcing a manifest from a different subscription management application
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:320

  107) Import Test Group: Async Tests it should behave like importer should import arch content correctly
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:337

  108) Import Test Group: Async Tests it should behave like importer should return 400 when importing manifest in use by another owner
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:350

  109) Import Test Group: Async Tests it should behave like importer should store the subscription upstream entitlement cert
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:384

  110) Import Test Group: Async Tests it should behave like importer contains upstream consumer
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:413

  111) Import Test Group: Async Tests it should behave like importer should contain all derived product data
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:428

  112) Import Test Group: Async Tests it should behave like importer should contain branding info
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:438

  113) Import Test Group: Async Tests it should behave like importer should put the cdn from the manifest into the created subscriptions
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:446

  114) Import Test Group: Sync import tests it should behave like importer creates pools
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:71

  115) Import Test Group: Sync import tests it should behave like importer ignores multiplier for pool quantity
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:92

  116) Import Test Group: Sync import tests it should behave like importer modifies owner to reference upstream consumer
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:106

  117) Import Test Group: Sync import tests it should behave like importer originating information should be populated in the import record
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:111

  118) Import Test Group: Sync import tests it should behave like importer can be undone
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:123

  119) Import Test Group: Sync import tests it should behave like importer should create a SUCCESS record of the import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:164

  120) Import Test Group: Sync import tests it should behave like importer should create a DELETE record on a deleted import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:171

  121) Import Test Group: Sync import tests it should behave like importer should return a 409 on a duplicate import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:181

  122) Import Test Group: Sync import tests it should behave like importer should not allow importing an old manifest
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:201

  123) Import Test Group: Sync import tests it should behave like importer should create a FAILURE record on a duplicate import
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:231

  124) Import Test Group: Sync import tests it should behave like importer should set the correct error status message
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:239

  125) Import Test Group: Sync import tests it should behave like importer should allow forcing the same manifest
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:248

  126) Import Test Group: Sync import tests it should behave like importer should allow importing older manifests into another owner
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:254

  127) Import Test Group: Sync import tests it should behave like importer should return 409 when importing manifest from different subscription management application
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:269

  128) Import Test Group: Sync import tests it should behave like importer should allow forcing a manifest from a different subscription management application
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:320

  129) Import Test Group: Sync import tests it should behave like importer should import arch content correctly
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:337

  130) Import Test Group: Sync import tests it should behave like importer should return 400 when importing manifest in use by another owner
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:350

  131) Import Test Group: Sync import tests it should behave like importer should store the subscription upstream entitlement cert
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:384

  132) Import Test Group: Sync import tests it should behave like importer contains upstream consumer
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:413

  133) Import Test Group: Sync import tests it should behave like importer should contain all derived product data
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:428

  134) Import Test Group: Sync import tests it should behave like importer should contain branding info
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:438

  135) Import Test Group: Sync import tests it should behave like importer should put the cdn from the manifest into the created subscriptions
     # candlepin running in hosted mode
     # ./server/spec/import_spec.rb:446

  136) Import Update should successfully update the import
     # candlepin running in hosted mode
     # ./server/spec/import_excess_spec.rb:27

  137) Import can retrieve subscripton certificate from derived pool entitlement
     # candlepin running in hosted mode
     # ./server/spec/derived_product_import_spec.rb:37

  138) Import Into Environment should not remove custom pools during import
     # candlepin running in hosted mode
     # ./server/spec/import_environment_spec.rb:21

  139) Import Into Environment should not remove pools for custom subscriptions during import
     # candlepin running in hosted mode
     # ./server/spec/import_environment_spec.rb:56


Failures:

  1) System Admins can create entitlements only for their systems
     Failure/Error: return create_pool_and_subscription(@owner['key'], product.id, 10)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SystemAdmins:0x0000000438fbe0>
       Did you mean?  create_pool
                      create_upstream_subscription
     # ./server/spec/system_admin_spec.rb:67:in `create_pool'
     # ./server/spec/system_admin_spec.rb:71:in `block (2 levels) in <top (required)>'

  2) System Admins can create entitlements asynchronously
     Failure/Error: return create_pool_and_subscription(@owner['key'], product.id, 10)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SystemAdmins:0x000000046698e8>
       Did you mean?  create_pool
                      create_upstream_subscription
     # ./server/spec/system_admin_spec.rb:67:in `create_pool'
     # ./server/spec/system_admin_spec.rb:79:in `block (2 levels) in <top (required)>'

  3) System Admins can view only their system's entitlements
     Failure/Error: return create_pool_and_subscription(@owner['key'], product.id, 10)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SystemAdmins:0x00000002084ce0>
       Did you mean?  create_pool
                      create_upstream_subscription
     # ./server/spec/system_admin_spec.rb:67:in `create_pool'
     # ./server/spec/system_admin_spec.rb:89:in `block (2 levels) in <top (required)>'

  4) System Admins can only unsubscribe their system's entitlements
     Failure/Error: return create_pool_and_subscription(@owner['key'], product.id, 10)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SystemAdmins:0x00000002275ce8>
       Did you mean?  create_pool
                      create_upstream_subscription
     # ./server/spec/system_admin_spec.rb:67:in `create_pool'
     # ./server/spec/system_admin_spec.rb:108:in `block (2 levels) in <top (required)>'

  5) System admins with read-only on org can create entitlements only for their systems
     Failure/Error: return create_pool_and_subscription(@owner['key'], product.id, 10)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SystemAdminsWithReadOnlyOnOrg:0x000000039b34c8>
       Did you mean?  create_pool
                      create_upstream_subscription
     # ./server/spec/system_admin_spec.rb:159:in `create_pool'
     # ./server/spec/system_admin_spec.rb:197:in `block (2 levels) in <top (required)>'

  6) System admins with read-only on org can view entitlements for other systems in the org
     Failure/Error: return create_pool_and_subscription(@owner['key'], product.id, 10)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SystemAdminsWithReadOnlyOnOrg:0x0000000387eb20>
       Did you mean?  create_pool
                      create_upstream_subscription
     # ./server/spec/system_admin_spec.rb:159:in `create_pool'
     # ./server/spec/system_admin_spec.rb:205:in `block (2 levels) in <top (required)>'

  7) System admins with read-only on org can only unsubscribe their system's entitlements
     Failure/Error: return create_pool_and_subscription(@owner['key'], product.id, 10)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SystemAdminsWithReadOnlyOnOrg:0x00000005138be8>
       Did you mean?  create_pool
                      create_upstream_subscription
     # ./server/spec/system_admin_spec.rb:159:in `create_pool'
     # ./server/spec/system_admin_spec.rb:217:in `block (2 levels) in <top (required)>'

  8) GuestId Resource should allow a single guest to be updated and revokes host-limited ents
     Failure/Error: create_pool_and_subscription(@owner1['key'], super_awesome.id, 20)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::GuestIdResource:0x0000000194f650>
       Did you mean?  create_upstream_subscription
     # ./server/spec/guestid_resource_spec.rb:156:in `block (2 levels) in <top (required)>'

  9) GuestId Resource should allow a single guest to be updated and not revoke host-limited ents
     Failure/Error: create_pool_and_subscription(@owner1['key'], super_awesome.id, 20)

     NoMethodError:
       undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::GuestIdResource:0x00000004342278>
       Did you mean?  create_upstream_subscription
     # ./server/spec/guestid_resource_spec.rb:208:in `block (2 levels) in <top (required)>'

  10) Consumer Resource Host/Guest bonus pool should have provided products
      Failure/Error: create_pool_and_subscription(@owner1['key'], std_product.id, 10, [provided_product.id])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceHostGuest:0x000000020e81a0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/consumer_bonus_pool_provided_spec.rb:29:in `block (2 levels) in <top (required)>'

  11) Core and RAM Limiting consumer status should be valid when cores, ram and sockets are covered
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x00000001710a38>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  12) Core and RAM Limiting consumer status should be partial when consumer core only not covered
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x000000046cd6b8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  13) Core and RAM Limiting consumer status should be partial when consumer ram only not covered
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x00000004140a60>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  14) Core and RAM Limiting consumer status should be partial when consumer sockets only not covered
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x00000004228090>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  15) Core and RAM Limiting consumer status should be valid when consumer core requires extra entitlement
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x00000003b4fb60>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  16) Core and RAM Limiting consumer status should be invalid when consumer ram exceeds entitlement
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x000000054c2ca0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  17) Core and RAM Limiting consumer status should be valid when consumer socket requires extra entitlement
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x00000003ed69a0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  18) Core and RAM Limiting should allow consumer to be compliant for socket and core quantity across stacked pools
      Failure/Error:
        @core_socket_pool = create_pool_and_subscription(@owner['key'], @core_and_socket_product.id, 10,
                                                  [], '18881', '1222')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreAndRAMLimiting:0x00000004e7f668>
        Did you mean?  create_upstream_subscription
      # ./server/spec/core_and_ram_spec.rb:20:in `block (2 levels) in <top (required)>'

  19) Unbind should remove a single entitlement
      Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Unbind:0x00000002ac5308>
        Did you mean?  create_upstream_subscription
      # ./server/spec/unbind_spec.rb:12:in `block (2 levels) in <top (required)>'

  20) Unbind should remove entitlements by pool id without touching other entitlements
      Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Unbind:0x0000000289fe70>
        Did you mean?  create_upstream_subscription
      # ./server/spec/unbind_spec.rb:12:in `block (2 levels) in <top (required)>'

  21) Unbind should add unbound entitlements back to the pool
      Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Unbind:0x000000022f8d00>
        Did you mean?  create_upstream_subscription
      # ./server/spec/unbind_spec.rb:12:in `block (2 levels) in <top (required)>'

  22) Unbind should revoke an entitlement's certificate
      Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Unbind:0x00000002038160>
        Did you mean?  create_upstream_subscription
      # ./server/spec/unbind_spec.rb:12:in `block (2 levels) in <top (required)>'

  23) Unbind should leave other entitlements intact
      Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Unbind:0x000000016855f0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/unbind_spec.rb:12:in `block (2 levels) in <top (required)>'

  24) Single Entitlement Compliance Reasons reports products not covered
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x00000004ae08e0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  25) Single Entitlement Compliance Reasons reports ram not covered but no installed product
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x000000047300d8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  26) Single Entitlement Compliance Reasons reports ram not covered
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x00000003d27988>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  27) Single Entitlement Compliance Reasons future reasons system invalid
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x00000003925da8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  28) Single Entitlement Compliance Reasons reports sockets not covered
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x0000000387d220>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  29) Single Entitlement Compliance Reasons reports cores not covered
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x000000037d7b40>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  30) Single Entitlement Compliance Reasons reports arch not covered
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x00000003727600>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  31) Single Entitlement Compliance Reasons reports multiple reasons
      Failure/Error: @product1_pool = create_pool_and_subscription(@owner['key'], @product1.id, 100, [], '1888', '1234')

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SingleEntitlementComplianceReasons:0x000000036aace0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:35:in `block (2 levels) in <top (required)>'

  32) Stacking Compliance Reasons report stack does not cover ram
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x000000035fe4b8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  33) Stacking Compliance Reasons report partial for stack that does not cover ram and has no installed products
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x00000002cfbe10>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  34) Stacking Compliance Reasons report stack does not cover sockets
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x00000002be0f30>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  35) Stacking Compliance Reasons report stack does not cover cores
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x00000002ad7490>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  36) Stacking Compliance Reasons report stack does not cover vCPUs
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x000000029c6948>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  37) Stacking Compliance Reasons report stack does not cover arch
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x0000000286b7b0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  38) Stacking Compliance Reasons report stack does not cover all installed products
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x00000002705b78>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  39) Stacking Compliance Reasons report stack does not cover multiple attributes
      Failure/Error: @stackable_pool_1 = create_pool_and_subscription(@owner['key'], @stackable_product_1.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::StackingComplianceReasons:0x00000002256910>
        Did you mean?  create_upstream_subscription
      # ./server/spec/compliance_reasons_spec.rb:385:in `block (2 levels) in <top (required)>'

  40) Consumer Dev Resource should create entitlement to newly created dev pool
      Failure/Error: @active_sub = create_pool_and_subscription(@owner['key'], active_prod.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerDevResource:0x000000020646c0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/consumer_resource_dev_spec.rb:18:in `block (2 levels) in <top (required)>'

  41) Consumer Dev Resource should create new entitlement when dev pool already exists
      Failure/Error: @active_sub = create_pool_and_subscription(@owner['key'], active_prod.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerDevResource:0x000000017328b8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/consumer_resource_dev_spec.rb:18:in `block (2 levels) in <top (required)>'

  42) Consumer Dev Resource should create new entitlement when dev_sku attribute changes
      Failure/Error: @active_sub = create_pool_and_subscription(@owner['key'], active_prod.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerDevResource:0x00000003afc6b8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/consumer_resource_dev_spec.rb:18:in `block (2 levels) in <top (required)>'

  43) Consumer Dev Resource should allow sub-man-gui process for auto-bind
      Failure/Error: @active_sub = create_pool_and_subscription(@owner['key'], active_prod.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerDevResource:0x00000003ed7d50>
        Did you mean?  create_upstream_subscription
      # ./server/spec/consumer_resource_dev_spec.rb:18:in `block (2 levels) in <top (required)>'

  44) Consumer Dev Resource should not allow entitlement for consumer past expiration
      Failure/Error: @active_sub = create_pool_and_subscription(@owner['key'], active_prod.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerDevResource:0x000000056ad8d0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/consumer_resource_dev_spec.rb:18:in `block (2 levels) in <top (required)>'

  45) Consumer Resource Host/Guest guest should not impose SLA on host auto-attach
      Failure/Error:
          create_pool_and_subscription(@owner1['key'], vip_product.id, 10, [provided_product.id],
        '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceHostGuest_2:0x00000002ab1e98>
        Did you mean?  create_upstream_subscription
      # ./server/spec/consumer_resource_host_guest_spec.rb:220:in `block (2 levels) in <top (required)>'

  46) Certificate Revocation List contains the serial of entitlement(s) revoked
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x0000000213bcb0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  47) Certificate Revocation List does not contain the serial of a valid entitlement(s)
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x00000001f9c6c0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  48) Certificate Revocation List contains the serials of revoked entitlement(s) and not the unrevoked ones
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x0000000165aa30>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  49) Certificate Revocation List does not contain the serial of unrevoked entitlement(s) when entitlement(s) are revoked
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x000000046394b8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  50) Certificate Revocation List should not contain entitlements from an owner deleted with revoke=false
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x00000003df6d00>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  51) Certificate Revocation List should regenerate the on-disk crl and revoke
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x00000003a02f00>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  52) Certificate Revocation List should regenerate the on-disk crl
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x00000004142c48>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  53) Certificate Revocation List should put revoked CDN cert on CRL
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x00000003754448>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  54) Certificate Revocation List should put revoked ueber cert on CRL
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x000000045a4818>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  55) Certificate Revocation List should put revoked id cert on CRL
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x00000003fb2b80>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  56) Certificate Revocation List should put revoked content access cert on CRL
      Failure/Error:
          @monitoring_pool = create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CertificateRevocationList:0x000000057a84d8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/cert_revocation_spec.rb:19:in `block (2 levels) in <top (required)>'

  57) Qpid Broker should detect FLOW_STOP
      Failure/Error: msgs = @cq.receive

      Qpid::Proton::TimeoutError:
        Qpid::Proton::TimeoutError
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:106:in `check_for_error'
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:68:in `block in create_exception_handler_wrapper'
      # ./server/spec/candlepin_scenarios.rb:722:in `block in receive'
      # ./server/spec/candlepin_scenarios.rb:721:in `loop'
      # ./server/spec/candlepin_scenarios.rb:721:in `receive'
      # ./server/spec/qpid_spec.rb:100:in `block (2 levels) in <top (required)>'

  58) Qpid Broker should transition to SUSPEND mode
      Failure/Error: msgs = @cq.receive

      Qpid::Proton::TimeoutError:
        Qpid::Proton::TimeoutError
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:106:in `check_for_error'
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:68:in `block in create_exception_handler_wrapper'
      # ./server/spec/candlepin_scenarios.rb:722:in `block in receive'
      # ./server/spec/candlepin_scenarios.rb:721:in `loop'
      # ./server/spec/candlepin_scenarios.rb:721:in `receive'
      # ./server/spec/qpid_spec.rb:100:in `block (2 levels) in <top (required)>'

  59) Qpid Broker should transition to NORMAL mode
      Failure/Error: msgs = @cq.receive

      Qpid::Proton::TimeoutError:
        Qpid::Proton::TimeoutError
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:106:in `check_for_error'
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:68:in `block in create_exception_handler_wrapper'
      # ./server/spec/candlepin_scenarios.rb:722:in `block in receive'
      # ./server/spec/candlepin_scenarios.rb:721:in `loop'
      # ./server/spec/candlepin_scenarios.rb:721:in `receive'
      # ./server/spec/qpid_spec.rb:100:in `block (2 levels) in <top (required)>'

  60) Qpid Broker should start in SUSPEND mode without Qpid
      Failure/Error: msgs = @cq.receive

      Qpid::Proton::TimeoutError:
        Qpid::Proton::TimeoutError
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:106:in `check_for_error'
      # /home/crog/.rvm/gems/ruby-2.3.3/gems/qpid_proton-0.17.0/lib/util/error_handler.rb:68:in `block in create_exception_handler_wrapper'
      # ./server/spec/candlepin_scenarios.rb:722:in `block in receive'
      # ./server/spec/candlepin_scenarios.rb:721:in `loop'
      # ./server/spec/candlepin_scenarios.rb:721:in `receive'
      # ./server/spec/qpid_spec.rb:100:in `block (2 levels) in <top (required)>'

  61) Pool Resource lets consumers view pools
      Failure/Error: create_pool_and_subscription(owner1['key'], product.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x00000004e61578>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:13:in `block (2 levels) in <top (required)>'

  62) Pool Resource includes null values in json
      Failure/Error: create_pool_and_subscription(owner1['key'], product.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x00000005642238>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:29:in `block (2 levels) in <top (required)>'

  63) Pool Resource does not let consumers view pool entitlements
      Failure/Error: pool = create_pool_and_subscription(owner1['key'], product.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x000000039b3c48>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:45:in `block (2 levels) in <top (required)>'

  64) Pool Resource does not let consumers view another owners pool
      Failure/Error: pool = create_pool_and_subscription(owner2['key'], product.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x0000000498b1c0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:65:in `block (2 levels) in <top (required)>'

  65) Pool Resource does not let owner admins view another owners pool
      Failure/Error: pool = create_pool_and_subscription(owner2['key'], product.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x000000038c2ed8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:80:in `block (2 levels) in <top (required)>'

  66) Pool Resource should not return expired pools
      Failure/Error: create_pool_and_subscription(owner['key'], product.id, 5, [], '', '', '', now - 60, now - 1)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x000000036c5748>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:92:in `block (2 levels) in <top (required)>'

  67) Pool Resource should not list pools with errors for a consumer if listall is used
      Failure/Error: pool = create_pool_and_subscription(owner['key'], product.id, 1)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x000000035d4dc0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:102:in `block (2 levels) in <top (required)>'

  68) Pool Resource should list pools with warnings for a consumer if listall is used
      Failure/Error: pool = create_pool_and_subscription(owner['key'], product.id, 1)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x00000002b72e40>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:124:in `block (2 levels) in <top (required)>'

  69) Pool Resource can delete pools
      Failure/Error: pool = create_pool_and_subscription(owner1['key'], product.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x00000002958d30>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:140:in `block (2 levels) in <top (required)>'

  70) Pool Resource deletes child pools upon parent deletion
      Failure/Error: master_pool = create_pool_and_subscription(owner1['key'], product.id, 10)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x00000002095a18>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:173:in `block (2 levels) in <top (required)>'

  71) Pool Resource should return calculated attributes
      Failure/Error: pool = create_pool_and_subscription(owner['key'], product.id, 25)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x000000022407a0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:189:in `block (2 levels) in <top (required)>'

  72) Pool Resource should create pools originating from multiplier products correctly and with branding
      Failure/Error:
        created = create_pool_and_subscription(owner['key'], product.id, 11,
          [], '', '', '', nil, nil, false, :branding => [b1,b2])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolResource:0x00000001faf7e8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/pool_resource_spec.rb:265:in `block (2 levels) in <top (required)>'

  73) Entitlements should bypasses rules for "candlepin" consumers
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x000000044b9160>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  74) Entitlements should throw an error when filtering by a non-existant product ID
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x0000000380d088>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  75) Entitlements should allow an entitlement to be consumed by product
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x000000036054c0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  76) Entitlements should allow an entitlement to be consumed by pool
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000002ae75c0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  77) Entitlements should allow consumption of quantity 10
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x000000025d3548>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  78) Entitlements should allow consumption of quantity zero
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000001ef8570>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  79) Entitlements should allow multiple products to be consumed
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x0000000594d950>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  80) Entitlements should have the correct product ID when subscribing by product
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x000000052ac740>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  81) Entitlements should have the correct product ID when subscribing by pool
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000005749a00>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  82) Entitlements should filter entitlements by product attribute
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000004cdf7e0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  83) Entitlements should filter consumer entitlements by matches parameter
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000003bcbc10>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  84) Entitlements should be removed after revoking all entitlements
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x0000000374b640>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  85) Entitlements should remove multiple entitlements after revoking all entitlements
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000002cf0740>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  86) Entitlements should not allow consuming two entitlements for the same product
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000002982b80>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  87) Entitlements should not allow consuming two entitlements in same pool
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x000000021b2590>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  88) Entitlements should not allow consuming an odd quantity
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000003bface0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  89) Entitlements should allow consuming an even quantity
      Failure/Error:
          create_pool_and_subscription(@owner['key'], @virt.id, 20,
        [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Entitlements:0x00000004b9fe70>
        Did you mean?  create_upstream_subscription
      # ./server/spec/entitlement_spec.rb:37:in `block (2 levels) in <top (required)>'

  90) Conditional Content and Dependent Entitlements includes conditional content sets
      Failure/Error:
        @bundled_pool_1 = create_pool_and_subscription(@owner['key'], @bundled_product_1.id, 10,
          [@required_product_1.id, @required_product_2.id, @required_product_3.id])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConditionalContentAndDependentEntitlements:0x00000004e602b8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/conditional_content_spec.rb:18:in `block (2 levels) in <top (required)>'

  91) Conditional Content and Dependent Entitlements includes conditional content sets selectively
      Failure/Error:
        @bundled_pool_1 = create_pool_and_subscription(@owner['key'], @bundled_product_1.id, 10,
          [@required_product_1.id, @required_product_2.id, @required_product_3.id])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConditionalContentAndDependentEntitlements:0x0000000570e888>
        Did you mean?  create_upstream_subscription
      # ./server/spec/conditional_content_spec.rb:18:in `block (2 levels) in <top (required)>'

  92) Conditional Content and Dependent Entitlements does not include conditional content without the required products
      Failure/Error:
        @bundled_pool_1 = create_pool_and_subscription(@owner['key'], @bundled_product_1.id, 10,
          [@required_product_1.id, @required_product_2.id, @required_product_3.id])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConditionalContentAndDependentEntitlements:0x0000000478d6e8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/conditional_content_spec.rb:18:in `block (2 levels) in <top (required)>'

  93) Conditional Content and Dependent Entitlements is regenerated when consumer receives access to a required product
      Failure/Error:
        @bundled_pool_1 = create_pool_and_subscription(@owner['key'], @bundled_product_1.id, 10,
          [@required_product_1.id, @required_product_2.id, @required_product_3.id])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConditionalContentAndDependentEntitlements:0x00000004cdc7c0>
        Did you mean?  create_upstream_subscription
      # ./server/spec/conditional_content_spec.rb:18:in `block (2 levels) in <top (required)>'

  94) Conditional Content and Dependent Entitlements is regenerated when the consumer loses access to required products
      Failure/Error:
        @bundled_pool_1 = create_pool_and_subscription(@owner['key'], @bundled_product_1.id, 10,
          [@required_product_1.id, @required_product_2.id, @required_product_3.id])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConditionalContentAndDependentEntitlements:0x0000000466ad38>
        Did you mean?  create_upstream_subscription
      # ./server/spec/conditional_content_spec.rb:18:in `block (2 levels) in <top (required)>'

  95) Conditional Content and Dependent Entitlements is regenerated when the required product subscriptions disappear
      Failure/Error:
        @bundled_pool_1 = create_pool_and_subscription(@owner['key'], @bundled_product_1.id, 10,
          [@required_product_1.id, @required_product_2.id, @required_product_3.id])

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConditionalContentAndDependentEntitlements:0x00000003bc2f48>
        Did you mean?  create_upstream_subscription
      # ./server/spec/conditional_content_spec.rb:18:in `block (2 levels) in <top (required)>'

  96) Activation Keys should allow owners to list existing activation keys
      Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000036b0488>
        Did you mean?  create_upstream_subscription
      # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  97) Activation Keys should allow updating of names
      Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000002c6d778>
        Did you mean?  create_upstream_subscription
      # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  98) Activation Keys should allow updating of descriptions
      Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000029e4498>
        Did you mean?  create_upstream_subscription
      # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  99) Activation Keys should allow superadmin to delete their activation keys
      Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

      NoMethodError:
        undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000022d4ce8>
        Did you mean?  create_upstream_subscription
      # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  100) Activation Keys should allow owner to delete their activation keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000001f1daf0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  101) Activation Keys should not allow wrong owner to delete activation keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000003b22a20>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  102) Activation Keys should allow pools to be added to and removed from activation keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000003e18838>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  103) Activation Keys should allow product ids to be added to and removed from activation keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000004a56460>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  104) Activation Keys should allow auto attach flag to be set on activation keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000054358c8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  105) Activation Keys should allow overrides to be added to keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000004c71470>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  106) Activation Keys should allow overrides to be removed from keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000003c60f68>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  107) Activation Keys should verify override name is valid
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000037df840>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  108) Activation Keys should verify override name is below 256 length
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000003661270>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  109) Activation Keys should allow release to be set on keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000002bc3d90>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  110) Activation Keys should allow service level to be set on keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x00000002887b90>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  111) Activation Keys should allow service level to be updated on keys
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000021c8930>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  112) Activation Keys should return correct exception for contraint violations
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000035ad838>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  113) Activation Keys should throw an exception with malformed data
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x0000000410e790>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  114) Activation Keys should list activation keys with populated entity collections
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 37, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ActivationKeys:0x000000052ee9d8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/activation_key_spec.rb:18:in `block (2 levels) in <top (required)>'

  115) Virt Only Pools should allow virt guests to consume from virt_only pools
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VirtOnlyPools:0x000000058c4830>
         Did you mean?  create_upstream_subscription
       # ./server/spec/virt_only_spec.rb:77:in `new_product'
       # ./server/spec/virt_only_spec.rb:14:in `block (2 levels) in <top (required)>'

  116) Virt Only Pools should allow virt guests to consume from physical pools
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VirtOnlyPools:0x00000005098cd8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/virt_only_spec.rb:77:in `new_product'
       # ./server/spec/virt_only_spec.rb:24:in `block (2 levels) in <top (required)>'

  117) Virt Only Pools should deny physical consumers from virt_only pools
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VirtOnlyPools:0x00000004b429f0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/virt_only_spec.rb:77:in `new_product'
       # ./server/spec/virt_only_spec.rb:34:in `block (2 levels) in <top (required)>'

  118) Virt Only Pools virt_only product should result in virt_only pool
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VirtOnlyPools:0x00000003d277a8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/virt_only_spec.rb:77:in `new_product'
       # ./server/spec/virt_only_spec.rb:44:in `block (2 levels) in <top (required)>'

  119) Virt Only Pools should allow virt_only pools to be listed for manifest consumers
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VirtOnlyPools:0x00000003871948>
         Did you mean?  create_upstream_subscription
       # ./server/spec/virt_only_spec.rb:77:in `new_product'
       # ./server/spec/virt_only_spec.rb:58:in `block (2 levels) in <top (required)>'

  120) Domain Consumer should not be able to consume non domain specific products
       Failure/Error:
           create_pool_and_subscription(@owner['key'], @monitoring.id, 4,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DomainConsumer:0x0000000370e7b8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/domain_consumer_spec.rb:15:in `block (2 levels) in <top (required)>'

  121) Domain Consumer should be able to consume domain products
       Failure/Error:
           create_pool_and_subscription(@owner['key'], @monitoring.id, 4,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DomainConsumer:0x000000035d66e8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/domain_consumer_spec.rb:15:in `block (2 levels) in <top (required)>'

  122) Domain Consumer should ONLY be able to consume domain products
       Failure/Error:
           create_pool_and_subscription(@owner['key'], @monitoring.id, 4,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DomainConsumer:0x00000002ae6d28>
         Did you mean?  create_upstream_subscription
       # ./server/spec/domain_consumer_spec.rb:15:in `block (2 levels) in <top (required)>'

  123) Entitlement Certificate V1 Size will regen the v1 entitlement cert based on content set limit
       Failure/Error: create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV1Size:0x0000000280c350>
         Did you mean?  create_upstream_subscription
       # ./server/spec/client_v1_size_spec.rb:19:in `block (2 levels) in <top (required)>'

  124) Entitlement Certificate V1 Size will not allow an excessive content set to block others
       Failure/Error: create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV1Size:0x00000005237058>
         Did you mean?  create_upstream_subscription
       # ./server/spec/client_v1_size_spec.rb:19:in `block (2 levels) in <top (required)>'

  125) Autobind On Owner succeeds when requesting bind of multiple pools with same stack id
       Failure/Error: create_pool_and_subscription(owner['key'], prod['id'], 10)['id']

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::AutobindOnOwner:0x000000035af890>
         Did you mean?  create_upstream_subscription
       # ./server/spec/autobind_spec.rb:67:in `block (2 levels) in <top (required)>'

  126) Autobind On Owner favors non-shared pools
       Failure/Error: shared_pool = create_pool_and_subscription(owner_key, prod['id'])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::AutobindOnOwner:0x000000037d8158>
         Did you mean?  create_upstream_subscription
       # ./server/spec/autobind_spec.rb:137:in `block (2 levels) in <top (required)>'

  127) Unmapped Guest Pools allows a new guest with no host to attach to an unmapped guest pool
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x00000003e1a5e8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  128) Unmapped Guest Pools does not allow a new guest with a host to attach to an unmapped guest pool
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x000000048abca0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  129) Unmapped Guest Pools ensures unmapped guest will attach to unmapped guest pool on auto attach
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x000000056e7350>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  130) Unmapped Guest Pools ensures unmapped guest will attach to unmapped guest pool on auto attach only once
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x000000043da4d8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  131) Unmapped Guest Pools unmapped guest entitlement does not have pool end date
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x00000004733030>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  132) Unmapped Guest Pools revokes the unmapped guest pool once the guest is mapped
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x000000038e5820>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  133) Unmapped Guest Pools hides unmapped guest pools from pool lists if instructed to
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x0000000378fa48>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  134) Unmapped Guest Pools revokes entitlement from another host during an auto attach
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x0000000360cec8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  135) Unmapped Guest Pools compliance status for entitled unmapped guest will be partial
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x00000002bdb8c8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  136) Unmapped Guest Pools compliance status for entitled unmapped guest will be partial without installed product
       Failure/Error: create_pool_and_subscription(@owner['key'], @virt_limit_product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnmappedGuestPools:0x00000002970bd8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/unmapped_guest_spec.rb:23:in `block (2 levels) in <top (required)>'

  137) Subscription Resource should allow owners to create subscriptions and retrieve all
       Failure/Error:
             create_pool_and_subscription(@owner['key'], @some_product.id, 2,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SubscriptionResource:0x000000022beb78>
         Did you mean?  create_upstream_subscription
       # ./server/spec/subscription_resource_spec.rb:17:in `block (2 levels) in <top (required)>'

  138) Subscription Resource should allow admins to delete subscriptions
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], @monitoring_product.id, 5)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SubscriptionResource:0x000000035acd48>
         Did you mean?  create_upstream_subscription
       # ./server/spec/subscription_resource_spec.rb:26:in `block (2 levels) in <top (required)>'

  139) Subscription Resource should not allow clients to fetch subscriptions using id
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], @one_more_product.id, 2)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SubscriptionResource:0x00000003df5770>
         Did you mean?  create_upstream_subscription
       # ./server/spec/subscription_resource_spec.rb:33:in `block (2 levels) in <top (required)>'

  140) Subscription Resource should not allow clients to fetch subscription cert using subscription id
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], @one_more_product.id, 2)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SubscriptionResource:0x0000000549bc18>
         Did you mean?  create_upstream_subscription
       # ./server/spec/subscription_resource_spec.rb:43:in `block (2 levels) in <top (required)>'

  141) Entitlement Migrate should allow entire entitlement counts to be moved to another distributor
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 25)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementMigrate:0x00000003bc3ba0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_migrate_spec.rb:12:in `block (2 levels) in <top (required)>'

  142) Entitlement Migrate should allow partial entitlement counts to be moved to another distributor
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 25)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementMigrate:0x000000038a47a8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_migrate_spec.rb:12:in `block (2 levels) in <top (required)>'

  143) Entitlement Migrate should not allow migration when destination lacks capability
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 25)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementMigrate:0x000000038051f8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_migrate_spec.rb:12:in `block (2 levels) in <top (required)>'

  144) Entitlement Migrate should move entire entitlement count when none specified
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 25)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementMigrate:0x00000003748530>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_migrate_spec.rb:12:in `block (2 levels) in <top (required)>'

  145) Multi Org Shares survives refresh on both orgs
       Failure/Error:
         pool = create_pool_and_subscription(@owner1['key'], id, 10, [pp.id],
             'blah', 'blah', 'blah', nil, nil, false, {:derived_product_id => dp.id, :derived_provided_products => [dpp.id]})

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x0000000383cdd8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:203:in `block (2 levels) in <top (required)>'

  146) Multi Org Shares binds a pool to a share consumer
       Failure/Error:
         pool = create_pool_and_subscription(@owner1['key'], id, 10, [pp.id],
             'blah', 'blah', 'blah', nil, nil, false, {:derived_product_id => dp.id, :derived_provided_products => [dpp.id]})

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x000000035dd920>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:228:in `block (2 levels) in <top (required)>'

  147) Multi Org Shares does not allow to over share a pool
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], prod.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x0000000290ec80>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:272:in `block (2 levels) in <top (required)>'

  148) Multi Org Shares adjusts shared pool quantity when source entitlement is updated
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], prod.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x00000001a04d98>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:290:in `block (2 levels) in <top (required)>'

  149) Multi Org Shares deletes a shared pool when source entitlement is revoked
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], prod.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x000000059b0ca8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:306:in `block (2 levels) in <top (required)>'

  150) Multi Org Shares should allow multi share even without multi-entitlement
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], prod.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x000000059f00b0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:322:in `block (2 levels) in <top (required)>'

  151) Multi Org Shares uses an existing product in a share recipient
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], owner1_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x000000043d81d8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:338:in `block (2 levels) in <top (required)>'

  152) Multi Org Shares replaces one product share with a newer product share
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x00000003c62ca0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:385:in `block (2 levels) in <top (required)>'

  153) Multi Org Shares prohibits sharing a share
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], owner1_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x00000003688af0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:403:in `block (2 levels) in <top (required)>'

  154) Multi Org Shares prohibits sharing a dev pool
       Failure/Error: @active_sub = create_pool_and_subscription(@owner1['key'], active_prod.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x00000002b599e0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:450:in `block (2 levels) in <top (required)>'

  155) Multi Org Shares prohibits sharing an unmapped guest pool
       Failure/Error: create_pool_and_subscription(@owner1['key'], product.id, 10, [])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x000000021f1010>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:463:in `block (2 levels) in <top (required)>'

  156) Multi Org Shares does not list unsharable pools for share consumers
       Failure/Error: create_pool_and_subscription(@owner1['key'], product.id, 10, [])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x0000000422ae58>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:476:in `block (2 levels) in <top (required)>'

  157) Multi Org Shares lists pools for share correctly based on quantity
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], prod.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x00000003fb3418>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:487:in `block (2 levels) in <top (required)>'

  158) Multi Org Shares reduces share pool quantity before revoking share entitlements
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x00000002ca7b58>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:577:in `block (2 levels) in <top (required)>'

  159) Multi Org Shares reduces share pool quantity and revokes share entitlements
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x000000028ff5f0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:620:in `block (2 levels) in <top (required)>'

  160) Multi Org Shares revokes share entitlements by creation across master and shared pools
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiOrgShares:0x000000053b0920>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multi_org_spec.rb:662:in `block (2 levels) in <top (required)>'

  161) Owner Resource allows consumers to view their service levels
       Failure/Error: create_pool_and_subscription(owner['key'], product1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x00000003805978>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:47:in `block (2 levels) in <top (required)>'

  162) Owner Resource lets owners list pools
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x00000002bb1910>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:80:in `block (2 levels) in <top (required)>'

  163) Owner Resource lets owners list pools in pages
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x00000002a6b8d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:89:in `block (3 levels) in <top (required)>'
       # ./server/spec/owner_resource_spec.rb:88:in `each'
       # ./server/spec/owner_resource_spec.rb:88:in `block (2 levels) in <top (required)>'

  164) Owner Resource lets owners update subscription
       Failure/Error: pool = create_pool_and_subscription(owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x00000002921218>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:99:in `block (2 levels) in <top (required)>'

  165) Owner Resource lets owners list pools in pages for a consumer
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x000000027a0600>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:118:in `block (3 levels) in <top (required)>'
       # ./server/spec/owner_resource_spec.rb:117:in `each'
       # ./server/spec/owner_resource_spec.rb:117:in `block (2 levels) in <top (required)>'

  166) Owner Resource lets only superadmin users refresh pools
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x0000000557d988>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:146:in `block (2 levels) in <top (required)>'

  167) Owner Resource does allow the default service level only to get updated
       Failure/Error: create_pool_and_subscription(owner['key'], product1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x000000038e4fb0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:209:in `block (2 levels) in <top (required)>'

  168) Owner Resource lets owners update their default service level
       Failure/Error:
           create_pool_and_subscription(owner['key'], product1.id, 10,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x0000000383c388>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:244:in `block (2 levels) in <top (required)>'

  169) Owner Resource lets owners show service levels
       Failure/Error: create_pool_and_subscription(owner['key'], product1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x000000036634d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:302:in `block (2 levels) in <top (required)>'

  170) Owner Resource allows service level exempt service levels to be filtered out
       Failure/Error:
           create_pool_and_subscription(owner['key'], product1.id, 10,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x000000035d2c28>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:366:in `block (2 levels) in <top (required)>'

  171) Owner Resource should return calculated attributes
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x0000000293d530>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:388:in `block (2 levels) in <top (required)>'

  172) Owner Resource should not double bind when healing an org
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResource:0x00000003b22e58>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:435:in `block (2 levels) in <top (required)>'

  173) Owner Resource Pool Filter Tests lets owners filter pools by single filter
       Failure/Error: create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourcePoolFilterTests:0x00000003606de8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:600:in `block (2 levels) in <top (required)>'

  174) Owner Resource Pool Filter Tests lets owners filter pools by multiple filter
       Failure/Error: create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourcePoolFilterTests:0x00000002c7d998>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:600:in `block (2 levels) in <top (required)>'

  175) Owner Resource Pool Filter Tests list pools with matches against provided products
       Failure/Error: create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourcePoolFilterTests:0x00000002ae6c38>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:600:in `block (2 levels) in <top (required)>'

  176) Owner Resource Pool Filter Tests should allow user to list standard pool by subscription id
       Failure/Error: create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourcePoolFilterTests:0x0000000290f090>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:600:in `block (2 levels) in <top (required)>'

  177) Owner Resource Pool Filter Tests should allow user to list bonus pool also by subscription id
       Failure/Error: create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourcePoolFilterTests:0x000000023198e8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:600:in `block (2 levels) in <top (required)>'

  178) Owner Resource Owner Info Tests my systems user should filter consumer counts in owner info
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 100, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceOwnerInfoTests:0x00000003d02660>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:729:in `block (2 levels) in <top (required)>'

  179) Owner Resource Entitlement List Tests can fetch all entitlements of an owner
       Failure/Error:
           create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceEntitlementListTests:0x000000038dc720>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:792:in `block (2 levels) in <top (required)>'

  180) Owner Resource Entitlement List Tests can filter all entitlements by using matches param
       Failure/Error:
           create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceEntitlementListTests:0x00000003807818>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:792:in `block (2 levels) in <top (required)>'

  181) Owner Resource Entitlement List Tests can filter consumer entitlements by product attribute
       Failure/Error:
           create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6,
         [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceEntitlementListTests:0x0000000370d980>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:792:in `block (2 levels) in <top (required)>'

  182) Owner Resource Future Pool Tests can fetch current pools
       Failure/Error: @current_pool = create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', @now - 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceFuturePoolTests:0x00000003612c60>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:834:in `block (2 levels) in <top (required)>'

  183) Owner Resource Future Pool Tests can fetch current and future pools
       Failure/Error: @current_pool = create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', @now - 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceFuturePoolTests:0x00000002c9e800>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:834:in `block (2 levels) in <top (required)>'

  184) Owner Resource Future Pool Tests can fetch future pools
       Failure/Error: @current_pool = create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', @now - 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceFuturePoolTests:0x00000002b10088>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:834:in `block (2 levels) in <top (required)>'

  185) Owner Resource Future Pool Tests can fetch future pools based on activeon date
       Failure/Error: @current_pool = create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', @now - 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceFuturePoolTests:0x00000002944290>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:834:in `block (2 levels) in <top (required)>'

  186) Owner Resource Future Pool Tests cannot use both add_future and only_future flags
       Failure/Error: @current_pool = create_pool_and_subscription(@owner['key'], @product1.id, 10, [], '', '', '', @now - 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceFuturePoolTests:0x000000025cfda8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:834:in `block (2 levels) in <top (required)>'

  187) Owner Resource counting feature should count consumers only with specific skus
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], p.id, 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceCountingFeature:0x000000053dbf58>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:982:in `create_product_and_bint_it_to_consumer_return_sku'
       # ./server/spec/owner_resource_spec.rb:912:in `block (2 levels) in <top (required)>'

  188) Owner Resource counting feature should count consumers only with specific subscriptionIds
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], p.id, 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceCountingFeature:0x00000004c71ab0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:995:in `create_product_and_bint_it_to_consumer_return_subId'
       # ./server/spec/owner_resource_spec.rb:933:in `block (2 levels) in <top (required)>'

  189) Owner Resource counting feature should count consumer only with specific contract numbers
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], p.id, 1, [], cn)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerResourceCountingFeature:0x00000003c635d8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_resource_spec.rb:1009:in `create_product_and_bint_it_to_consumer_return_contractNr'
       # ./server/spec/owner_resource_spec.rb:954:in `block (2 levels) in <top (required)>'

  190) Instance Based Subscriptions should auto-subscribe physical systems with quantity 2 per socket pair
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @instance_product.id,
           10, [@eng_product['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::InstanceBasedSubscriptions:0x000000037a3c28>
         Did you mean?  create_upstream_subscription
       # ./server/spec/instance_spec.rb:41:in `block (2 levels) in <top (required)>'

  191) Instance Based Subscriptions should auto-subscribe guest systems with quantity 1
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @instance_product.id,
           10, [@eng_product['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::InstanceBasedSubscriptions:0x00000002c29bb8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/instance_spec.rb:41:in `block (2 levels) in <top (required)>'

  192) vCPU Limiting consumer status should be valid when consumer vCPUs are covered
       Failure/Error: @vcpu_pool = create_pool_and_subscription(@owner['key'], @vcpu_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VCPULimiting:0x00000003bf8cd8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/vcpu_spec.rb:20:in `block (2 levels) in <top (required)>'

  193) vCPU Limiting consumer status should be partial when consumer vCPUs are not covered
       Failure/Error: @vcpu_pool = create_pool_and_subscription(@owner['key'], @vcpu_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VCPULimiting:0x00000005499e18>
         Did you mean?  create_upstream_subscription
       # ./server/spec/vcpu_spec.rb:20:in `block (2 levels) in <top (required)>'

  194) vCPU Limiting can heal single entitlement when vcpu limited
       Failure/Error: @vcpu_pool = create_pool_and_subscription(@owner['key'], @vcpu_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VCPULimiting:0x00000005a540b0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/vcpu_spec.rb:20:in `block (2 levels) in <top (required)>'

  195) vCPU Limiting can heal correct quantity when vcpu limited
       Failure/Error: @vcpu_pool = create_pool_and_subscription(@owner['key'], @vcpu_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VCPULimiting:0x000000041c7e98>
         Did you mean?  create_upstream_subscription
       # ./server/spec/vcpu_spec.rb:20:in `block (2 levels) in <top (required)>'

  196) vCPU Limiting will not heal when system vcpu is not covered by any entitlements
       Failure/Error: @vcpu_pool = create_pool_and_subscription(@owner['key'], @vcpu_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::VCPULimiting:0x0000000483eb00>
         Did you mean?  create_upstream_subscription
       # ./server/spec/vcpu_spec.rb:20:in `block (2 levels) in <top (required)>'

  197) Content Access will show up in the owner at distributor on export/import
       Failure/Error: @cp_export = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000027af880>
         Did you mean?  create_upstream_subscription
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/content_access_spec.rb:260:in `new'
       # ./server/spec/content_access_spec.rb:260:in `block (2 levels) in <top (required)>'

  198) Content Access will express on consumers at the distributor
       Failure/Error: @cp_export = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000059f0240>
         Did you mean?  create_upstream_subscription
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/content_access_spec.rb:293:in `new'
       # ./server/spec/content_access_spec.rb:293:in `block (2 levels) in <top (required)>'

  199) Export Async Export Tests it should behave like exporter exports consumer types
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  200) Export Async Export Tests it should behave like exporter exports consumers
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  201) Export Async Export Tests it should behave like exporter exports CDN URL
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  202) Export Async Export Tests it should behave like exporter should not include consumer json in entitlements
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  203) Export Async Export Tests it should behave like exporter exports candlepin 0.x backward compatable product definitions
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  204) Export Async Export Tests it should behave like exporter exports entitlement certificates
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  205) Export Async Export Tests it should behave like exporter exports regenerated entitlement certificates
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  206) Export Async Export Tests it should behave like exporter should support only exporting certificates
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  207) Export Async Export Tests it should behave like exporter exported certs should have nothing else but meta and entitlement_certificate
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  208) Export Async Export Tests it should behave like exporter exports rules
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  209) Export Async Export Tests it should behave like exporter should export products
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  210) Export Async Export Tests it should behave like exporter should allow manifest creation with read only user
       Failure/Error: @exporter = AsyncStandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<AsyncStandardExporter:0x000000036b13b0>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:187
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:23:in `new'
       # ./server/spec/export_spec.rb:23:in `block (3 levels) in <top (required)>'

  211) Export Sync Export Tests it should behave like exporter exports consumer types
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  212) Export Sync Export Tests it should behave like exporter exports consumers
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  213) Export Sync Export Tests it should behave like exporter exports CDN URL
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  214) Export Sync Export Tests it should behave like exporter should not include consumer json in entitlements
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  215) Export Sync Export Tests it should behave like exporter exports candlepin 0.x backward compatable product definitions
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  216) Export Sync Export Tests it should behave like exporter exports entitlement certificates
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  217) Export Sync Export Tests it should behave like exporter exports regenerated entitlement certificates
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  218) Export Sync Export Tests it should behave like exporter should support only exporting certificates
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  219) Export Sync Export Tests it should behave like exporter exported certs should have nothing else but meta and entitlement_certificate
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  220) Export Sync Export Tests it should behave like exporter exports rules
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  221) Export Sync Export Tests it should behave like exporter should export products
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  222) Export Sync Export Tests it should behave like exporter should allow manifest creation with read only user
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x000000038e6e28>
         Did you mean?  create_upstream_subscription
       Shared Example Group: "exporter" called from ./server/spec/export_spec.rb:191
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/export_spec.rb:25:in `new'
       # ./server/spec/export_spec.rb:25:in `block (3 levels) in <top (required)>'

  223) Custom Product create custom products and subscribe
       Failure/Error: create_pool_and_subscription(@owner['key'], product1.id, 2, [], '', '12345', '6789', nil, @end_date, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CustomProduct:0x0000000549a368>
         Did you mean?  create_upstream_subscription
       # ./server/spec/custom_product_spec.rb:27:in `block (2 levels) in <top (required)>'

  224) Consumer Resource should receive paged data back when requested
       Failure/Error: create_pool_and_subscription(@owner1['key'], prod.id, 6)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000003873108>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:27:in `block (3 levels) in <top (required)>'
       # ./server/spec/consumer_resource_spec.rb:25:in `each'
       # ./server/spec/consumer_resource_spec.rb:25:in `block (2 levels) in <top (required)>'

  225) Consumer Resource should not re-calculate quantity attributes when fetching entitlements
       Failure/Error: create_pool_and_subscription(@owner1['key'], prod.id, 6)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000048193a0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:56:in `block (2 levels) in <top (required)>'

  226) Consumer Resource should block consumers from using other org's pools
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], product.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000004639cd8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:69:in `block (2 levels) in <top (required)>'

  227) Consumer Resource should set compliance status and update compliance status
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], product1.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000044bac40>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:120:in `block (2 levels) in <top (required)>'

  228) Consumer Resource should allow consumer to bind to products supporting multiple architectures
       Failure/Error: pool = create_pool_and_subscription(owner['key'], prod.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x0000000808a388>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:369:in `block (2 levels) in <top (required)>'

  229) Consumer Resource updates consumer updated timestamp on bind
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], prod.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000076b0c40>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:378:in `block (2 levels) in <top (required)>'

  230) Consumer Resource consumer can async bind by product id
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], product.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x0000000840cf38>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:394:in `block (2 levels) in <top (required)>'

  231) Consumer Resource should allow consumer to bind to products based on product socket quantity across pools
       Failure/Error: create_pool_and_subscription(owner['key'], prod1.id, 1, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000005ece438>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:418:in `block (2 levels) in <top (required)>'

  232) Consumer Resource should allow the installed products to be enriched with product information
       Failure/Error: create_pool_and_subscription(owner['key'], product1.id, 1, [], '', '', '', now, now + 365)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000076fdf68>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:501:in `block (2 levels) in <top (required)>'

  233) Consumer Resource should allow a consumer to update their service level
       Failure/Error: create_pool_and_subscription(@owner1['key'], product1.id, 1, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x0000000415b0e0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:604:in `block (2 levels) in <top (required)>'

  234) Consumer Resource should not list service levels from expired pools
       Failure/Error: create_pool_and_subscription(@owner1['key'], product.id, 1, [], '', '', '', now - 2, now - 1)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000059060a0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:662:in `block (2 levels) in <top (required)>'

  235) Consumer Resource should allow a consumer dry run an autosubscribe based on service level
       Failure/Error: pool1 = create_pool_and_subscription(@owner1['key'], product1.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000004e7e100>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:682:in `block (2 levels) in <top (required)>'

  236) Consumer Resource should recognize support level exempt attribute
       Failure/Error: pool1 = create_pool_and_subscription(@owner1['key'], product1.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000003d4e1f0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:747:in `block (2 levels) in <top (required)>'

  237) Consumer Resource should return empty list for dry run where all pools are blocked because of consumer type
       Failure/Error: create_pool_and_subscription(@owner1['key'], product1.id, 1, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000002c43f40>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:796:in `block (2 levels) in <top (required)>'

  238) Consumer Resource should allow a consumer to unregister and free up the pool
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 2)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000043bc8c0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:833:in `block (2 levels) in <top (required)>'

  239) Consumer Resource should allow a consumer to bind when the POST body is empty string
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 2)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x0000000469bed8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:848:in `block (2 levels) in <top (required)>'

  240) Consumer Resource should allow a consumer to unregister and free up the pools consumed in a batch
       Failure/Error: create_pool_and_subscription(owner['key'], product.id, 2)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x0000000790b440>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:861:in `block (2 levels) in <top (required)>'

  241) Consumer Resource should bind correct quantity when not specified
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], product1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000004ae1330>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:934:in `block (2 levels) in <top (required)>'

  242) Consumer Resource should bind quantity 1 when suggested is 0 and not specified
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], product1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000029103c8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:949:in `block (2 levels) in <top (required)>'

  243) Consumer Resource should bind correct future quantity when fully subscribed today
       Failure/Error: current_pool = create_pool_and_subscription(@owner1['key'], product1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x000000036887f8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:966:in `block (2 levels) in <top (required)>'

  244) Consumer Resource updates consumer entitlement count on bind and revoke
       Failure/Error: pool = create_pool_and_subscription(@owner1['key'], prod.id)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResource:0x00000004629f18>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_spec.rb:1021:in `block (2 levels) in <top (required)>'

  245) Import Update should successfully update the import
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x00000005b68410>
         Did you mean?  create_upstream_subscription
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/import_update_spec.rb:10:in `new'
       # ./server/spec/import_update_spec.rb:10:in `block (2 levels) in <top (required)>'

  246) Import Update should remove all imported subscriptions if import has no entitlements
       Failure/Error: @exporter = StandardExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<StandardExporter:0x00000005b68410>
         Did you mean?  create_upstream_subscription
       # ./server/spec/candlepin_scenarios.rb:541:in `initialize'
       # ./server/spec/import_update_spec.rb:10:in `new'
       # ./server/spec/import_update_spec.rb:10:in `block (2 levels) in <top (required)>'

  247) Environments Certificate V3 filters content not promoted to environment
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EnvironmentsCertificateV3:0x00000006bbb4e8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/environment_cert_v3_spec.rb:37:in `block (2 levels) in <top (required)>'

  248) Environments Certificate V3 regenerates certificates after promoting/demoting content
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EnvironmentsCertificateV3:0x00000007ed65f0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/environment_cert_v3_spec.rb:71:in `block (2 levels) in <top (required)>'

  249) Uebercert contains all content for the entire org
       Failure/Error:
         create_pool_and_subscription(owner1['key'], prod1.id, 10, [], '12345', '6789', 'order1',
                     nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Uebercert:0x00000004d06b88>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ueber_cert_spec.rb:46:in `block (2 levels) in <top (required)>'

  250) Distributor Capability can stop bind based on consumer capabilities
       Failure/Error: create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DistributorCapability:0x00000007c70b80>
         Did you mean?  create_upstream_subscription
       # ./server/spec/distributor_capability_spec.rb:142:in `block (2 levels) in <top (required)>'

  251) Owner Product Resource should fail when fetching non-existing products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000006cc9178>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  252) Owner Product Resource updates individual product fields
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000003bb5ed8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  253) Owner Product Resource does not update product name
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000004448578>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  254) Owner Product Resource removes content from products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x000000083485e8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  255) Owner Product Resource allows regular users to view products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x000000074c5d18>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  256) Owner Product Resource create two products with the same name
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x000000065dcd88>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  257) Owner Product Resource retrieves the owners of an active product
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x000000070e9370>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  258) Owner Product Resource refreshes pools for owner on subscription creation
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000006523978>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  259) Owner Product Resource refreshes pools for orgs owning products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000005386c10>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  260) Owner Product Resource lists all products in bulk fetch
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000003afc2a8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  261) Owner Product Resource lists products in pages
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x0000000387ba60>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  262) Owner Product Resource lists products in sorted pages
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000004d58e60>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  263) Owner Product Resource should return correct exception for contraint violations
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x0000000438c120>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  264) Owner Product Resource bad request on attempt to delete product attached to sub
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x0000000382f930>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  265) Owner Product Resource bad request on attempt to delete provided product attached to sub
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x000000036a9070>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  266) Owner Product Resource bad request on attempt to delete derived product attached to sub
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000002c21eb8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  267) Owner Product Resource bad request on attempt to delete derived provided product attached to sub
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::OwnerProductResource:0x00000002968078>
         Did you mean?  create_upstream_subscription
       # ./server/spec/owner_product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  268) Post bind bonus pool updates should create entitlement derived pool in hosted mode
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000002256cf8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  269) Post bind bonus pool updates should create entitlement derived pool in standalone mode
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000007cb5848>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  270) Post bind bonus pool updates should create stack derived pool in hosted mode
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x0000000780c738>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  271) Post bind bonus pool updates should create stack derived pool in standalone mode
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x000000079b7560>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  272) Post bind bonus pool updates should create entitlement derived pool for every bind
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000007cb6dd8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  273) Post bind bonus pool updates should decrement bonus pool quantity when finite virt limited master pool is partially exported
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000007dda340>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  274) Post bind bonus pool updates should decrement bonus pool quantity when finite virt limited master pool is partially shared
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000006d3c178>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  275) Post bind bonus pool updates should update bonus pool quantity when export entitlement quantity is updated
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000007a84628>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  276) Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is partially exported
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000007aa64d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  277) Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is partially shared
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x000000083b48d8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  278) Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is consumed by non manifest consumer
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x000000080cd2a0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  279) Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is consumed by non sharing consumer
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000003f768d8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  280) Post bind bonus pool updates should not change hostlimited entitlement derived pool quantity when source entitlement's quantity is reduced
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000004925ff0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  281) Post bind bonus pool updates should change unlimited virtlimited entitlement derived pool quantity when source entitlement's quantity is reduced
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x000000038d4f48>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  282) Post bind bonus pool updates should change limited virtlimited entitlement derived pool quantity when source entitlement's quantity is reduced
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000002c1f9d8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  283) Post bind bonus pool updates should revoke excess entitlements when finite virt limited master pool is exported
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000001fb9c20>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  284) Post bind bonus pool updates should revoke only sufficient entitlements when finite virt limited master pool is exported
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x000000029e9ba0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  285) Post bind bonus pool updates should revoke sufficient entitlements when entitlement quantity is updated
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000003790998>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  286) Post bind bonus pool updates should not revoke excess entitlements when unlimited virt limited master pool is partially exported
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x007f8e5c004668>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  287) Post bind bonus pool updates should not revoke excess entitlements when unlimited virt limited master pool is consumed by non manifest consumer
       Failure/Error: @limited_master_pool = create_pool_and_subscription(owner['key'], limited_virt_limit_prod['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PostBindBonusPoolUpdates:0x00000003f65d08>
         Did you mean?  create_upstream_subscription
       # ./server/spec/post_bind_bonus_pool_spec.rb:48:in `block (2 levels) in <top (required)>'

  288) Job Status should contain the owner key
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x000000065c6f60>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  289) Job Status should contain the target type
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x0000000754ed48>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  290) Job Status should be findable by owner key
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x00000007138768>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  291) Job Status should only find jobs with the correct owner key
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x0000000797b6c8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  292) Job Status should find an empty list if the owner key is wrong
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x00000005c52218>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  293) Job Status should return an error if no owner key is supplied
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x0000000765fc00>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  294) Job Status should cancel a job
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x000000068d3af0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  295) Job Status should contain the system target type and id for async binds
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x00000004ffaf38>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  296) Job Status should allow admin to view any job status
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x000000074ec530>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  297) Job Status should allow user to view status of own job
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x00000007adbd60>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  298) Job Status should allow user to view job status of consumer in managed org
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x0000000626d4e0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  299) Job Status should not allow user to view job status outside of managed org
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x00000007bfbb50>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  300) Job Status should allow consumer to view status of own job
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x000000052dfbe0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  301) Job Status should not allow consumer to access another consumers job status
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::JobStatus:0x00000005e0f880>
         Did you mean?  create_upstream_subscription
       # ./server/spec/job_status_spec.rb:13:in `block (2 levels) in <top (required)>'

  302) Unlimited Master Pools allows system to consume unlimited quantity pool
       Failure/Error: @pool_no_virt = create_pool_and_subscription(@owner['key'], @product_no_virt.id, -1, [], '', '', '', nil, nil, false)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnlimitedMasterPools:0x000000071270f8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/pool_unlimited_master_spec.rb:54:in `block (2 levels) in <top (required)>'

  303) Unlimited Master Pools allows system to consume limited virt quantity pool
       Failure/Error: @pool_no_virt = create_pool_and_subscription(@owner['key'], @product_no_virt.id, -1, [], '', '', '', nil, nil, false)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnlimitedMasterPools:0x0000000713aa40>
         Did you mean?  create_upstream_subscription
       # ./server/spec/pool_unlimited_master_spec.rb:54:in `block (2 levels) in <top (required)>'

  304) Unlimited Master Pools allows mapped guest to consume unlimited quantity pool
       Failure/Error: @pool_no_virt = create_pool_and_subscription(@owner['key'], @product_no_virt.id, -1, [], '', '', '', nil, nil, false)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnlimitedMasterPools:0x0000000754d3a8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/pool_unlimited_master_spec.rb:54:in `block (2 levels) in <top (required)>'

  305) Unlimited Master Pools allows mapped guest to consume limited host dependendent pool
       Failure/Error: @pool_no_virt = create_pool_and_subscription(@owner['key'], @product_no_virt.id, -1, [], '', '', '', nil, nil, false)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnlimitedMasterPools:0x00000006b59680>
         Did you mean?  create_upstream_subscription
       # ./server/spec/pool_unlimited_master_spec.rb:54:in `block (2 levels) in <top (required)>'

  306) Unlimited Master Pools allows unmapped guest to consume unlimited quantity pool
       Failure/Error: @pool_no_virt = create_pool_and_subscription(@owner['key'], @product_no_virt.id, -1, [], '', '', '', nil, nil, false)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::UnlimitedMasterPools:0x000000042538a8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/pool_unlimited_master_spec.rb:54:in `block (2 levels) in <top (required)>'

  307) Environments filters content not promoted to environment
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Environments:0x00000008089ca8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/environment_spec.rb:202:in `block (2 levels) in <top (required)>'

  308) Environments regenerates certificates after promoting/demoting content
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product['id'], 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Environments:0x000000068cb5d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/environment_spec.rb:233:in `block (2 levels) in <top (required)>'

  309) Entitlement Certificate is available after consuming an entitlement
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x00000003d4e970>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  310) Entitlement Certificate can be manually regenerated for a consumer
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x000000038c1e20>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  311) Entitlement Certificate can regenerate certificate by entitlement id
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x000000037bb3f0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  312) Entitlement Certificate can be manually regenerated for a product
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x000000036db1b0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  313) Entitlement Certificate will be regenerated when changing existing subscription's end date
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x000000035f3568>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  314) Entitlement Certificate single entitlement in excess will be deleted when existing subscription quantity is decreased
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x00000002c209c8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  315) Entitlement Certificate multiple entitlement in excess will be deleted when existing subscription quantity is decreased
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x00000002a88f70>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  316) Entitlement Certificate will be regenerated when existing subscription's quantity and dates are changed
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x000000028716b0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  317) Entitlement Certificate will be regenerated and dates will have the same values as that of the subscription which was changed
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x000000022e34f0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  318) Entitlement Certificate won't let one consumer regenerate another's certificates
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x00000001adb050>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  319) Entitlement Certificate won't let one consumer regenerate another's certificate by entitlement
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x00000006b5d528>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  320) Entitlement Certificate regenerates entitlement certificates by product for all owners
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], monitoring.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificate:0x000000078d3310>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_spec.rb:28:in `block (2 levels) in <top (required)>'

  321) Multiplier Products should have the correct quantity
       Failure/Error: create_pool_and_subscription(@owner['key'], calendaring.id, 4)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiplierProducts:0x00000007d6e780>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multiplier_spec.rb:14:in `block (2 levels) in <top (required)>'

  322) Multiplier Products should default the multiplier to 1 if it is negative
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 34)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiplierProducts:0x00000008036df0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multiplier_spec.rb:24:in `block (2 levels) in <top (required)>'

  323) Multiplier Products should default the multiplier to 1 if it is zero
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 18)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiplierProducts:0x00000005e3b750>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multiplier_spec.rb:34:in `block (2 levels) in <top (required)>'

  324) Multiplier Products should have the correct quantity after a refresh
       Failure/Error: create_pool_and_subscription(@owner['key'], product.id, 5)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::MultiplierProducts:0x000000060393e0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/multiplier_spec.rb:44:in `block (2 levels) in <top (required)>'

  325) SKU Level Enable Override sku override for enable shows on provided product in entitlement
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product['id'], 10, [providedProduct.id])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SKULevelEnableOverride:0x00000006cab308>
         Did you mean?  create_upstream_subscription
       # ./server/spec/sku_level_enable_override_spec.rb:27:in `block (2 levels) in <top (required)>'

  326) SKU Level Enable Override sku override for disable shows on provided product in entitlement
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product.id, 10, [providedProduct.id])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SKULevelEnableOverride:0x00000006fab030>
         Did you mean?  create_upstream_subscription
       # ./server/spec/sku_level_enable_override_spec.rb:52:in `block (2 levels) in <top (required)>'

  327) SKU Level Enable Override sku override for enabled superceded by environment promotion
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product.id, 10, [providedProduct.id])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SKULevelEnableOverride:0x00000004fd6fe8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/sku_level_enable_override_spec.rb:81:in `block (2 levels) in <top (required)>'

  328) SKU Level Enable Override sku override for enable shows on provided product in V1 entitlement
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product.id, 10, [providedProduct.id])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SKULevelEnableOverride:0x00000004ee2510>
         Did you mean?  create_upstream_subscription
       # ./server/spec/sku_level_enable_override_spec.rb:115:in `block (2 levels) in <top (required)>'

  329) SKU Level Enable Override sku override for disable shows on provided product in V1 entitlement
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product.id, 10, [providedProduct.id])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SKULevelEnableOverride:0x0000000736ed48>
         Did you mean?  create_upstream_subscription
       # ./server/spec/sku_level_enable_override_spec.rb:132:in `block (2 levels) in <top (required)>'

  330) SKU Level Enable Override sku override for enabled superceded by environment promotion V1
       Failure/Error: pool = create_pool_and_subscription(@owner['key'], product.id, 10, [providedProduct.id])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::SKULevelEnableOverride:0x000000039ea770>
         Did you mean?  create_upstream_subscription
       # ./server/spec/sku_level_enable_override_spec.rb:153:in `block (2 levels) in <top (required)>'

  331) Import and Undo Manifest in parallel should (sync) import and undo manifest in parallel successfully - import first
       Failure/Error: @iu_exporter = ImportUpdateBrandingExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<ImportUpdateBrandingExporter:0x00000003cdc3c0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/candlepin_scenarios.rb:427:in `create_pools_and_subs_with_brandings'
       # ./server/spec/candlepin_scenarios.rb:412:in `initialize'
       # ./server/spec/import_and_undo_exports_in_parallel_spec.rb:11:in `new'
       # ./server/spec/import_and_undo_exports_in_parallel_spec.rb:11:in `block (2 levels) in <top (required)>'

  332) Import and Undo Manifest in parallel should (sync) import and undo manifest in parallel successfully - undo first
       Failure/Error: @iu_exporter = ImportUpdateBrandingExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<ImportUpdateBrandingExporter:0x00000003cdc3c0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/candlepin_scenarios.rb:427:in `create_pools_and_subs_with_brandings'
       # ./server/spec/candlepin_scenarios.rb:412:in `initialize'
       # ./server/spec/import_and_undo_exports_in_parallel_spec.rb:11:in `new'
       # ./server/spec/import_and_undo_exports_in_parallel_spec.rb:11:in `block (2 levels) in <top (required)>'

  333) Import Single Pool Update should be able to maintain multiple imported entitlements from the same pool
       Failure/Error: @exporter = ImportUpdateExporter.new

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<ImportUpdateExporter:0x000000038af220>
         Did you mean?  create_upstream_subscription
       # ./server/spec/candlepin_scenarios.rb:479:in `initialize'
       # ./server/spec/import_update_single_pool_spec.rb:9:in `new'
       # ./server/spec/import_update_single_pool_spec.rb:9:in `block (2 levels) in <top (required)>'

  334) Product Resource should fail when fetching non-existing products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ProductResource:0x00000002b9aa30>
         Did you mean?  create_upstream_subscription
       # ./server/spec/product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  335) Product Resource throws exception on write operations
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ProductResource:0x000000027fc7e8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  336) Product Resource retrieves owners by product
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ProductResource:0x000000019da610>
         Did you mean?  create_upstream_subscription
       # ./server/spec/product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  337) Product Resource refreshes pools for orgs owning products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ProductResource:0x00000006c4b638>
         Did you mean?  create_upstream_subscription
       # ./server/spec/product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  338) Product Resource throws exception on get_owners with no products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ProductResource:0x00000004d6d9a0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  339) Product Resource throws exception on refresh with no products
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ProductResource:0x0000000628bd28>
         Did you mean?  create_upstream_subscription
       # ./server/spec/product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  340) Product Resource censors owner information on owner-agnostic retrieval
       Failure/Error:
         create_pool_and_subscription(@owner['key'], @product.id,
           10, [@prov_product.id], '222', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product.id,
             :derived_provided_products => [@derived_prov_product.id]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ProductResource:0x0000000631aa28>
         Did you mean?  create_upstream_subscription
       # ./server/spec/product_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  341) Derived Products prefers a host-autobind virt-only sub-pool to instance based pool during guest autobind
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x00000005e80828>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  342) Derived Products transfers sub-product data to main pool
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x00000008469c60>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  343) Derived Products allows guest to consume sub product pool
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x00000004a78178>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  344) Derived Products should not be visible by distributor that does not have capability after basic search
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x000000027c0b80>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  345) Derived Products should be visible by distributor that does not have capability after list all
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x00000005ecdda8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  346) Derived Products prevents distributor from attaching without necessisary capabilities
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x000000048431c8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  347) Derived Products distributor entitlement cert includes derived content
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x00000005df8568>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  348) Derived Products distributor entitlement cert includes derived modifier content
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x0000000508a0c0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  349) Derived Products host entitlement cert does not include derived content
       Failure/Error:
         @main_pool = create_pool_and_subscription(@owner['key'], @datacenter_product.id,
           10, [], '', '', '', nil, nil, false,
           {
             :derived_product_id => @derived_product['id'],
             :derived_provided_products => [@eng_product['id']]
           })

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::DerivedProducts:0x0000000784a3d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/derived_product_spec.rb:78:in `block (2 levels) in <top (required)>'

  350) Entitlement Certificate V3 generated a version 3.3 certificate when requesting a 3.0 certificate
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV3:0x000000062d1d28>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_v3_spec.rb:68:in `block (2 levels) in <top (required)>'

  351) Entitlement Certificate V3 generated a version 3.3 certificate
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV3:0x00000006b07678>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_v3_spec.rb:68:in `block (2 levels) in <top (required)>'

  352) Entitlement Certificate V3 generated the correct body in the blob
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV3:0x000000063595c0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_v3_spec.rb:68:in `block (2 levels) in <top (required)>'

  353) Entitlement Certificate V3 verify branding info is correct in json blob
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV3:0x000000025d0e38>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_v3_spec.rb:68:in `block (2 levels) in <top (required)>'

  354) Entitlement Certificate V3 encoded the content urls
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV3:0x0000000366f190>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_v3_spec.rb:68:in `block (2 levels) in <top (required)>'

  355) Entitlement Certificate V3 encoded many content urls
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV3:0x000000049ac2d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_v3_spec.rb:68:in `block (2 levels) in <top (required)>'

  356) Entitlement Certificate V3 generates a version 3.3 certificate on distributors with a cert_v3 capability
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], @product.id, 10, [], '12345', '6789', 'order1')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementCertificateV3:0x00000007242668>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_certificate_v3_spec.rb:68:in `block (2 levels) in <top (required)>'

  357) Pool serialization references owner as a link
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], product1.id, 2)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::PoolSerialization:0x0000000775d508>
         Did you mean?  create_upstream_subscription
       # ./server/spec/serialization_spec.rb:32:in `block (2 levels) in <top (required)>'

  358) Entitlement Serialization references pool as a link
       Failure/Error: @pool = create_pool_and_subscription(@owner['key'], product1.id, 2)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementSerialization:0x000000079fa478>
         Did you mean?  create_upstream_subscription
       # ./server/spec/serialization_spec.rb:51:in `block (2 levels) in <top (required)>'

  359) Core Limiting can consume core entitlement if requesting v3.2 certificate
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x0000000725e980>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  360) Core Limiting consumer status should be valid when consumer core is covered
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x00000007b97b78>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  361) Core Limiting consumer status should be partial when consumer core not covered
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x00000003928940>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  362) Core Limiting consumer status should be partial when consumer core covered but not sockets
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x000000078f9cb8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  363) Core Limiting consumer status should be partial when consumer sockets covered but not core
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x00000007c739c0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  364) Core Limiting consumer status is valid when both core and sockets are covered
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x000000071d0e00>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  365) Core Limiting can heal when core limited
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x00000007978e28>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  366) Core Limiting will not heal when system core is not covered by any entitlements
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x00000006358350>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  367) Core Limiting can heal when both core and socket limited
       Failure/Error: @core_pool = create_pool_and_subscription(@owner['key'], @core_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::CoreLimiting:0x00000003996418>
         Did you mean?  create_upstream_subscription
       # ./server/spec/core_spec.rb:18:in `block (2 levels) in <top (required)>'

  368) Entitlement Resource can filter all entitlements by using matches param
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000007585140>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  369) Entitlement Resource should not re-calculate attributes when fetching entitlements
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000006b8f550>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  370) Entitlement Resource can filter all entitlements by product attribute
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x000000081bf640>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  371) Entitlement Resource can filter consumer entitlements by product attribute
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x000000082b7ac0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  372) Entitlement Resource can filter consumer entitlements by using matches param
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000007621a18>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  373) Entitlement Resource should allow entitlement certificate regeneration based on product id
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000004df6de0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  374) Entitlement Resource allows filtering certificates by serial number
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000007efc610>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  375) Entitlement Resource allows listing certificates by serial numbers
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000004ea3c98>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  376) Entitlement Resource should allow consumer to change entitlement quantity
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000004f4ff48>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  377) Entitlement Resource should not allow consumer to change entitlement quantity out of bounds
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000005384fc8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  378) Entitlement Resource should not allow consumer to change entitlement quantity non-multi
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000004639c60>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  379) Entitlement Resource should handle concurrent requests to pool and maintain quanities
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x000000046ce298>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  380) Entitlement Resource should not allow over consumption in pool
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x00000005837f20>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  381) Entitlement Resource should end at zero quantity consumed when all consumers are unregistered
       Failure/Error: create_pool_and_subscription(@owner['key'], @monitoring_prod.id, 6, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::EntitlementResource:0x0000000438c148>
         Did you mean?  create_upstream_subscription
       # ./server/spec/entitlement_resource_spec.rb:15:in `block (2 levels) in <top (required)>'

  382) RAM Limiting can consume ram entitlement if requesting v3.1 certificate
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x0000000379b668>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  383) RAM Limiting consumer status should be valid when consumer RAM is covered
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000003683a00>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  384) RAM Limiting consumer status should be partial when consumer RAM not covered
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000002b4bde0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  385) RAM Limiting consumer status should be partial when consumer RAM covered but not sockets
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000002887208>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  386) RAM Limiting consumer status should be partial when consumer sockets covered but not RAM
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x0000000227f018>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  387) RAM Limiting consumer status is valid when both RAM and sockets are covered
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000001451c98>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  388) RAM Limiting can heal when RAM limited
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000005f4eef8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  389) RAM Limiting will not heal when system RAM is not covered by any entitlements
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000006c49478>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  390) RAM Limiting can heal when both RAM and socket limited
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x000000078d19e8>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  391) RAM Limiting consumer status should be green when stacking a single ram entitlement
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000007bd17b0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  392) RAM Limiting consumer status should be green when stacking a single ram entitlement with proper quantity
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x000000070322b0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  393) RAM Limiting autobind should completely cover ram products
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x000000074989d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  394) RAM Limiting healing should add ram entitlements to cover consumer
       Failure/Error: @ram_pool = create_pool_and_subscription(@owner['key'], @ram_product.id, 10, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::RAMLimiting:0x00000003a5e878>
         Did you mean?  create_upstream_subscription
       # ./server/spec/ram_spec.rb:18:in `block (2 levels) in <top (required)>'

  395) Healing entitles non-compliant products
       Failure/Error:
         current_pool = create_pool_and_subscription(@owner['key'], parent_prod['id'],
           10, [@product1['id'], @product2['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Healing:0x00000006b47d18>
         Did you mean?  create_upstream_subscription
       # ./server/spec/healing_spec.rb:29:in `block (2 levels) in <top (required)>'

  396) Healing entitles non-compliant products despite a valid future entitlement
       Failure/Error:
         current_pool = create_pool_and_subscription(@owner['key'], parent_prod['id'],
           10, [@product1['id'], @product2['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Healing:0x0000000659c0d0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/healing_spec.rb:44:in `block (2 levels) in <top (required)>'

  397) Healing entitles non-compliant products at a future date
       Failure/Error:
         current_pool = create_pool_and_subscription(@owner['key'], parent_prod['id'],
           10, [@product1['id'], @product2['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Healing:0x00000005e0dd78>
         Did you mean?  create_upstream_subscription
       # ./server/spec/healing_spec.rb:65:in `block (2 levels) in <top (required)>'

  398) Healing can multi-entitle stacked entitlements
       Failure/Error:
         current_pool = create_pool_and_subscription(@owner['key'], parent_prod['id'],
           10, [@product1['id'], @product2['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Healing:0x000000050cbde0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/healing_spec.rb:85:in `block (2 levels) in <top (required)>'

  399) Healing can complete partial stacks with no installed prod
       Failure/Error:
         current_pool = create_pool_and_subscription(@owner['key'], parent_prod['id'],
           10, [@product3['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Healing:0x00000004e3a810>
         Did you mean?  create_upstream_subscription
       # ./server/spec/healing_spec.rb:98:in `block (2 levels) in <top (required)>'

  400) Healing can multi-entitle stacked entitlements across pools
       Failure/Error:
         create_pool_and_subscription(@owner['key'], parent_prod['id'],
           2, [@product1['id'], @product2['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Healing:0x0000000721c788>
         Did you mean?  create_upstream_subscription
       # ./server/spec/healing_spec.rb:116:in `block (2 levels) in <top (required)>'

  401) Healing can complete a pre-existing partial stack
       Failure/Error:
         current_pool = create_pool_and_subscription(@owner['key'], parent_prod['id'],
           10, [@product1['id'], @product2['id']])

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::Healing:0x0000000499e5e0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/healing_spec.rb:133:in `block (2 levels) in <top (required)>'

  402) Autobind Disabled On Owner still allows dev consumer to autobind when disabled on owner
       Failure/Error: active_sub = create_pool_and_subscription(@owner['key'], active_prod.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::AutobindDisabledOnOwner:0x000000022fa7e0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/autobind_disabled_for_owner_spec.rb:39:in `block (2 levels) in <top (required)>'

  403) Band Limiting pool should have the correct quantity based off of the product multiplier
       Failure/Error: @ceph_pool = create_pool_and_subscription(@owner['key'], @ceph_product.id, 2, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::BandLimiting:0x000000039d0898>
         Did you mean?  create_upstream_subscription
       # ./server/spec/storage_band_spec.rb:27:in `block (2 levels) in <top (required)>'

  404) Band Limiting system status should be valid when all storage band usage is covered
       Failure/Error: @ceph_pool = create_pool_and_subscription(@owner['key'], @ceph_product.id, 2, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::BandLimiting:0x00000006ae2800>
         Did you mean?  create_upstream_subscription
       # ./server/spec/storage_band_spec.rb:27:in `block (2 levels) in <top (required)>'

  405) Band Limiting system status should be partial when only part of the storage band usage is covered
       Failure/Error: @ceph_pool = create_pool_and_subscription(@owner['key'], @ceph_product.id, 2, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::BandLimiting:0x00000007dd8130>
         Did you mean?  create_upstream_subscription
       # ./server/spec/storage_band_spec.rb:27:in `block (2 levels) in <top (required)>'

  406) Band Limiting storage band entitlements from same subscription can be stacked to cover entire system
       Failure/Error: @ceph_pool = create_pool_and_subscription(@owner['key'], @ceph_product.id, 2, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::BandLimiting:0x00000005ccadd0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/storage_band_spec.rb:27:in `block (2 levels) in <top (required)>'

  407) Band Limiting storage band entitlements will auto-attach correct quantity
       Failure/Error: @ceph_pool = create_pool_and_subscription(@owner['key'], @ceph_product.id, 2, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::BandLimiting:0x00000006c2df98>
         Did you mean?  create_upstream_subscription
       # ./server/spec/storage_band_spec.rb:27:in `block (2 levels) in <top (required)>'

  408) Band Limiting storage band entitlements will auto-heal correctly
       Failure/Error: @ceph_pool = create_pool_and_subscription(@owner['key'], @ceph_product.id, 2, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::BandLimiting:0x00000006fa8ab0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/storage_band_spec.rb:27:in `block (2 levels) in <top (required)>'

  409) Band Limiting storage band entitlement auto-attach without fact set consumes one entitlement
       Failure/Error: @ceph_pool = create_pool_and_subscription(@owner['key'], @ceph_product.id, 2, [], '1888', '1234')

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::BandLimiting:0x00000007d54858>
         Did you mean?  create_upstream_subscription
       # ./server/spec/storage_band_spec.rb:27:in `block (2 levels) in <top (required)>'

  410) Consumer Resource Activation Key should allow a consumer to register with activation keys
       Failure/Error: create_pool_and_subscription(@owner['key'], prod1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceActivationKey:0x00000007010020>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_activation_key_spec.rb:21:in `block (2 levels) in <top (required)>'

  411) Consumer Resource Activation Key should allow a consumer to register with an activation key with an auto-attach
       Failure/Error: create_pool_and_subscription(@owner['key'], prod1.id, 10, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceActivationKey:0x00000007d92e50>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_activation_key_spec.rb:37:in `block (2 levels) in <top (required)>'

  412) Consumer Resource Activation Key should allow a consumer to register with activation keys with service level
       Failure/Error: create_pool_and_subscription(@owner['key'], prod1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceActivationKey:0x00000004ea1b50>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_activation_key_spec.rb:83:in `block (2 levels) in <top (required)>'

  413) Consumer Resource Activation Key should allow a consumer to register with activation keys with null quantity
       Failure/Error: create_pool_and_subscription(@owner['key'], prod1.id, 10)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceActivationKey:0x00000003fb3ee0>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_activation_key_spec.rb:121:in `block (2 levels) in <top (required)>'

  414) Consumer Resource Activation Key should allow a consumer to register with an activation key with an auto-attach across pools
       Failure/Error: create_pool_and_subscription(@owner['key'], prod1.id, 1, [], '', '', '', nil, nil, true)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceActivationKey:0x000000037d4e40>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_activation_key_spec.rb:140:in `block (2 levels) in <top (required)>'

  415) Consumer Resource Activation Key should bind to subs when service level varies
       Failure/Error: create_pool_and_subscription(@owner['key'], rhel_product.id, 37)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceActivationKey:0x00000002b0b948>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_activation_key_spec.rb:187:in `block (2 levels) in <top (required)>'

  416) Consumer Resource Activation Key should not allow a consumer to register with no-availability pool
       Failure/Error: create_pool_and_subscription(@owner['key'], prod1.id, 0)

       NoMethodError:
         undefined method `create_pool_and_subscription' for #<RSpec::ExampleGroups::ConsumerResourceActivationKey:0x00000001f02c00>
         Did you mean?  create_upstream_subscription
       # ./server/spec/consumer_resource_activation_key_spec.rb:209:in `block (2 levels) in <top (required)>'

Finished in 20 minutes 33 seconds (files took 0.60641 seconds to load)
845 examples, 416 failures, 139 pending, 5 errors occurred outside of examples

Failed examples:

rspec ./server/spec/system_admin_spec.rb:70 # System Admins can create entitlements only for their systems
rspec ./server/spec/system_admin_spec.rb:78 # System Admins can create entitlements asynchronously
rspec ./server/spec/system_admin_spec.rb:88 # System Admins can view only their system's entitlements
rspec ./server/spec/system_admin_spec.rb:107 # System Admins can only unsubscribe their system's entitlements
rspec ./server/spec/system_admin_spec.rb:196 # System admins with read-only on org can create entitlements only for their systems
rspec ./server/spec/system_admin_spec.rb:204 # System admins with read-only on org can view entitlements for other systems in the org
rspec ./server/spec/system_admin_spec.rb:216 # System admins with read-only on org can only unsubscribe their system's entitlements
rspec ./server/spec/guestid_resource_spec.rb:142 # GuestId Resource should allow a single guest to be updated and revokes host-limited ents
rspec ./server/spec/guestid_resource_spec.rb:196 # GuestId Resource should allow a single guest to be updated and not revoke host-limited ents
rspec ./server/spec/consumer_bonus_pool_provided_spec.rb:16 # Consumer Resource Host/Guest bonus pool should have provided products
rspec ./server/spec/core_and_ram_spec.rb:41 # Core and RAM Limiting consumer status should be valid when cores, ram and sockets are covered
rspec ./server/spec/core_and_ram_spec.rb:65 # Core and RAM Limiting consumer status should be partial when consumer core only not covered
rspec ./server/spec/core_and_ram_spec.rb:88 # Core and RAM Limiting consumer status should be partial when consumer ram only not covered
rspec ./server/spec/core_and_ram_spec.rb:111 # Core and RAM Limiting consumer status should be partial when consumer sockets only not covered
rspec ./server/spec/core_and_ram_spec.rb:135 # Core and RAM Limiting consumer status should be valid when consumer core requires extra entitlement
rspec ./server/spec/core_and_ram_spec.rb:157 # Core and RAM Limiting consumer status should be invalid when consumer ram exceeds entitlement
rspec ./server/spec/core_and_ram_spec.rb:181 # Core and RAM Limiting consumer status should be valid when consumer socket requires extra entitlement
rspec ./server/spec/core_and_ram_spec.rb:203 # Core and RAM Limiting should allow consumer to be compliant for socket and core quantity across stacked pools
rspec ./server/spec/unbind_spec.rb:15 # Unbind should remove a single entitlement
rspec ./server/spec/unbind_spec.rb:27 # Unbind should remove entitlements by pool id without touching other entitlements
rspec ./server/spec/unbind_spec.rb:51 # Unbind should add unbound entitlements back to the pool
rspec ./server/spec/unbind_spec.rb:62 # Unbind should revoke an entitlement's certificate
rspec ./server/spec/unbind_spec.rb:80 # Unbind should leave other entitlements intact
rspec ./server/spec/compliance_reasons_spec.rb:40 # Single Entitlement Compliance Reasons reports products not covered
rspec ./server/spec/compliance_reasons_spec.rb:62 # Single Entitlement Compliance Reasons reports ram not covered but no installed product
rspec ./server/spec/compliance_reasons_spec.rb:94 # Single Entitlement Compliance Reasons reports ram not covered
rspec ./server/spec/compliance_reasons_spec.rb:128 # Single Entitlement Compliance Reasons future reasons system invalid
rspec ./server/spec/compliance_reasons_spec.rb:162 # Single Entitlement Compliance Reasons reports sockets not covered
rspec ./server/spec/compliance_reasons_spec.rb:197 # Single Entitlement Compliance Reasons reports cores not covered
rspec ./server/spec/compliance_reasons_spec.rb:233 # Single Entitlement Compliance Reasons reports arch not covered
rspec ./server/spec/compliance_reasons_spec.rb:267 # Single Entitlement Compliance Reasons reports multiple reasons
rspec ./server/spec/compliance_reasons_spec.rb:400 # Stacking Compliance Reasons report stack does not cover ram
rspec ./server/spec/compliance_reasons_spec.rb:435 # Stacking Compliance Reasons report partial for stack that does not cover ram and has no installed products
rspec ./server/spec/compliance_reasons_spec.rb:468 # Stacking Compliance Reasons report stack does not cover sockets
rspec ./server/spec/compliance_reasons_spec.rb:503 # Stacking Compliance Reasons report stack does not cover cores
rspec ./server/spec/compliance_reasons_spec.rb:540 # Stacking Compliance Reasons report stack does not cover vCPUs
rspec ./server/spec/compliance_reasons_spec.rb:578 # Stacking Compliance Reasons report stack does not cover arch
rspec ./server/spec/compliance_reasons_spec.rb:615 # Stacking Compliance Reasons report stack does not cover all installed products
rspec ./server/spec/compliance_reasons_spec.rb:646 # Stacking Compliance Reasons report stack does not cover multiple attributes
rspec ./server/spec/consumer_resource_dev_spec.rb:39 # Consumer Dev Resource should create entitlement to newly created dev pool
rspec ./server/spec/consumer_resource_dev_spec.rb:44 # Consumer Dev Resource should create new entitlement when dev pool already exists
rspec ./server/spec/consumer_resource_dev_spec.rb:50 # Consumer Dev Resource should create new entitlement when dev_sku attribute changes
rspec ./server/spec/consumer_resource_dev_spec.rb:71 # Consumer Dev Resource should allow sub-man-gui process for auto-bind
rspec ./server/spec/consumer_resource_dev_spec.rb:85 # Consumer Dev Resource should not allow entitlement for consumer past expiration
rspec ./server/spec/consumer_resource_host_guest_spec.rb:198 # Consumer Resource Host/Guest guest should not impose SLA on host auto-attach
rspec ./server/spec/cert_revocation_spec.rb:30 # Certificate Revocation List contains the serial of entitlement(s) revoked
rspec ./server/spec/cert_revocation_spec.rb:39 # Certificate Revocation List does not contain the serial of a valid entitlement(s)
rspec ./server/spec/cert_revocation_spec.rb:45 # Certificate Revocation List contains the serials of revoked entitlement(s) and not the unrevoked ones
rspec ./server/spec/cert_revocation_spec.rb:53 # Certificate Revocation List does not contain the serial of unrevoked entitlement(s) when entitlement(s) are revoked
rspec ./server/spec/cert_revocation_spec.rb:61 # Certificate Revocation List should not contain entitlements from an owner deleted with revoke=false
rspec ./server/spec/cert_revocation_spec.rb:74 # Certificate Revocation List should regenerate the on-disk crl and revoke
rspec ./server/spec/cert_revocation_spec.rb:91 # Certificate Revocation List should regenerate the on-disk crl
rspec ./server/spec/cert_revocation_spec.rb:109 # Certificate Revocation List should put revoked CDN cert on CRL
rspec ./server/spec/cert_revocation_spec.rb:130 # Certificate Revocation List should put revoked ueber cert on CRL
rspec ./server/spec/cert_revocation_spec.rb:136 # Certificate Revocation List should put revoked id cert on CRL
rspec ./server/spec/cert_revocation_spec.rb:142 # Certificate Revocation List should put revoked content access cert on CRL
rspec ./server/spec/qpid_spec.rb:104 # Qpid Broker should detect FLOW_STOP
rspec ./server/spec/qpid_spec.rb:143 # Qpid Broker should transition to SUSPEND mode
rspec ./server/spec/qpid_spec.rb:183 # Qpid Broker should transition to NORMAL mode
rspec ./server/spec/qpid_spec.rb:215 # Qpid Broker should start in SUSPEND mode without Qpid
rspec ./server/spec/pool_resource_spec.rb:8 # Pool Resource lets consumers view pools
rspec ./server/spec/pool_resource_spec.rb:24 # Pool Resource includes null values in json
rspec ./server/spec/pool_resource_spec.rb:40 # Pool Resource does not let consumers view pool entitlements
rspec ./server/spec/pool_resource_spec.rb:58 # Pool Resource does not let consumers view another owners pool
rspec ./server/spec/pool_resource_spec.rb:73 # Pool Resource does not let owner admins view another owners pool
rspec ./server/spec/pool_resource_spec.rb:87 # Pool Resource should not return expired pools
rspec ./server/spec/pool_resource_spec.rb:96 # Pool Resource should not list pools with errors for a consumer if listall is used
rspec ./server/spec/pool_resource_spec.rb:116 # Pool Resource should list pools with warnings for a consumer if listall is used
rspec ./server/spec/pool_resource_spec.rb:135 # Pool Resource can delete pools
rspec ./server/spec/pool_resource_spec.rb:164 # Pool Resource deletes child pools upon parent deletion
rspec ./server/spec/pool_resource_spec.rb:185 # Pool Resource should return calculated attributes
rspec ./server/spec/pool_resource_spec.rb:257 # Pool Resource should create pools originating from multiplier products correctly and with branding
rspec ./server/spec/entitlement_spec.rb:54 # Entitlements should bypasses rules for "candlepin" consumers
rspec ./server/spec/entitlement_spec.rb:61 # Entitlements should throw an error when filtering by a non-existant product ID
rspec ./server/spec/entitlement_spec.rb:67 # Entitlements should allow an entitlement to be consumed by product
rspec ./server/spec/entitlement_spec.rb:72 # Entitlements should allow an entitlement to be consumed by pool
rspec ./server/spec/entitlement_spec.rb:79 # Entitlements should allow consumption of quantity 10
rspec ./server/spec/entitlement_spec.rb:86 # Entitlements should allow consumption of quantity zero
rspec ./server/spec/entitlement_spec.rb:94 # Entitlements should allow multiple products to be consumed
rspec ./server/spec/entitlement_spec.rb:101 # Entitlements should have the correct product ID when subscribing by product
rspec ./server/spec/entitlement_spec.rb:108 # Entitlements should have the correct product ID when subscribing by pool
rspec ./server/spec/entitlement_spec.rb:115 # Entitlements should filter entitlements by product attribute
rspec ./server/spec/entitlement_spec.rb:127 # Entitlements should filter consumer entitlements by matches parameter
rspec ./server/spec/entitlement_spec.rb:139 # Entitlements should be removed after revoking all entitlements
rspec ./server/spec/entitlement_spec.rb:146 # Entitlements should remove multiple entitlements after revoking all entitlements
rspec ./server/spec/entitlement_spec.rb:154 # Entitlements should not allow consuming two entitlements for the same product
rspec ./server/spec/entitlement_spec.rb:162 # Entitlements should not allow consuming two entitlements in same pool
rspec ./server/spec/entitlement_spec.rb:170 # Entitlements should not allow consuming an odd quantity
rspec ./server/spec/entitlement_spec.rb:177 # Entitlements should allow consuming an even quantity
rspec ./server/spec/conditional_content_spec.rb:45 # Conditional Content and Dependent Entitlements includes conditional content sets
rspec ./server/spec/conditional_content_spec.rb:60 # Conditional Content and Dependent Entitlements includes conditional content sets selectively
rspec ./server/spec/conditional_content_spec.rb:75 # Conditional Content and Dependent Entitlements does not include conditional content without the required products
rspec ./server/spec/conditional_content_spec.rb:86 # Conditional Content and Dependent Entitlements is regenerated when consumer receives access to a required product
rspec ./server/spec/conditional_content_spec.rb:117 # Conditional Content and Dependent Entitlements is regenerated when the consumer loses access to required products
rspec ./server/spec/conditional_content_spec.rb:180 # Conditional Content and Dependent Entitlements is regenerated when the required product subscriptions disappear
rspec ./server/spec/activation_key_spec.rb:33 # Activation Keys should allow owners to list existing activation keys
rspec ./server/spec/activation_key_spec.rb:38 # Activation Keys should allow updating of names
rspec ./server/spec/activation_key_spec.rb:56 # Activation Keys should allow updating of descriptions
rspec ./server/spec/activation_key_spec.rb:74 # Activation Keys should allow superadmin to delete their activation keys
rspec ./server/spec/activation_key_spec.rb:78 # Activation Keys should allow owner to delete their activation keys
rspec ./server/spec/activation_key_spec.rb:83 # Activation Keys should not allow wrong owner to delete activation keys
rspec ./server/spec/activation_key_spec.rb:89 # Activation Keys should allow pools to be added to and removed from activation keys
rspec ./server/spec/activation_key_spec.rb:111 # Activation Keys should allow product ids to be added to and removed from activation keys
rspec ./server/spec/activation_key_spec.rb:120 # Activation Keys should allow auto attach flag to be set on activation keys
rspec ./server/spec/activation_key_spec.rb:129 # Activation Keys should allow overrides to be added to keys
rspec ./server/spec/activation_key_spec.rb:139 # Activation Keys should allow overrides to be removed from keys
rspec ./server/spec/activation_key_spec.rb:149 # Activation Keys should verify override name is valid
rspec ./server/spec/activation_key_spec.rb:157 # Activation Keys should verify override name is below 256 length
rspec ./server/spec/activation_key_spec.rb:165 # Activation Keys should allow release to be set on keys
rspec ./server/spec/activation_key_spec.rb:170 # Activation Keys should allow service level to be set on keys
rspec ./server/spec/activation_key_spec.rb:179 # Activation Keys should allow service level to be updated on keys
rspec ./server/spec/activation_key_spec.rb:197 # Activation Keys should return correct exception for contraint violations
rspec ./server/spec/activation_key_spec.rb:209 # Activation Keys should throw an exception with malformed data
rspec ./server/spec/activation_key_spec.rb:256 # Activation Keys should list activation keys with populated entity collections
rspec ./server/spec/virt_only_spec.rb:13 # Virt Only Pools should allow virt guests to consume from virt_only pools
rspec ./server/spec/virt_only_spec.rb:23 # Virt Only Pools should allow virt guests to consume from physical pools
rspec ./server/spec/virt_only_spec.rb:33 # Virt Only Pools should deny physical consumers from virt_only pools
rspec ./server/spec/virt_only_spec.rb:43 # Virt Only Pools virt_only product should result in virt_only pool
rspec ./server/spec/virt_only_spec.rb:57 # Virt Only Pools should allow virt_only pools to be listed for manifest consumers
rspec ./server/spec/domain_consumer_spec.rb:20 # Domain Consumer should not be able to consume non domain specific products
rspec ./server/spec/domain_consumer_spec.rb:27 # Domain Consumer should be able to consume domain products
rspec ./server/spec/domain_consumer_spec.rb:34 # Domain Consumer should ONLY be able to consume domain products
rspec ./server/spec/client_v1_size_spec.rb:41 # Entitlement Certificate V1 Size will regen the v1 entitlement cert based on content set limit
rspec ./server/spec/client_v1_size_spec.rb:75 # Entitlement Certificate V1 Size will not allow an excessive content set to block others
rspec ./server/spec/autobind_spec.rb:15 # Autobind On Owner succeeds when requesting bind of multiple pools with same stack id
rspec ./server/spec/autobind_spec.rb:128 # Autobind On Owner favors non-shared pools
rspec ./server/spec/unmapped_guest_spec.rb:45 # Unmapped Guest Pools allows a new guest with no host to attach to an unmapped guest pool
rspec ./server/spec/unmapped_guest_spec.rb:57 # Unmapped Guest Pools does not allow a new guest with a host to attach to an unmapped guest pool
rspec ./server/spec/unmapped_guest_spec.rb:70 # Unmapped Guest Pools ensures unmapped guest will attach to unmapped guest pool on auto attach
rspec ./server/spec/unmapped_guest_spec.rb:94 # Unmapped Guest Pools ensures unmapped guest will attach to unmapped guest pool on auto attach only once
rspec ./server/spec/unmapped_guest_spec.rb:121 # Unmapped Guest Pools unmapped guest entitlement does not have pool end date
rspec ./server/spec/unmapped_guest_spec.rb:136 # Unmapped Guest Pools revokes the unmapped guest pool once the guest is mapped
rspec ./server/spec/unmapped_guest_spec.rb:155 # Unmapped Guest Pools hides unmapped guest pools from pool lists if instructed to
rspec ./server/spec/unmapped_guest_spec.rb:172 # Unmapped Guest Pools revokes entitlement from another host during an auto attach
rspec ./server/spec/unmapped_guest_spec.rb:214 # Unmapped Guest Pools compliance status for entitled unmapped guest will be partial
rspec ./server/spec/unmapped_guest_spec.rb:233 # Unmapped Guest Pools compliance status for entitled unmapped guest will be partial without installed product
rspec ./server/spec/subscription_resource_spec.rb:16 # Subscription Resource should allow owners to create subscriptions and retrieve all
rspec ./server/spec/subscription_resource_spec.rb:25 # Subscription Resource should allow admins to delete subscriptions
rspec ./server/spec/subscription_resource_spec.rb:32 # Subscription Resource should not allow clients to fetch subscriptions using id
rspec ./server/spec/subscription_resource_spec.rb:42 # Subscription Resource should not allow clients to fetch subscription cert using subscription id
rspec ./server/spec/entitlement_migrate_spec.rb:22 # Entitlement Migrate should allow entire entitlement counts to be moved to another distributor
rspec ./server/spec/entitlement_migrate_spec.rb:32 # Entitlement Migrate should allow partial entitlement counts to be moved to another distributor
rspec ./server/spec/entitlement_migrate_spec.rb:44 # Entitlement Migrate should not allow migration when destination lacks capability
rspec ./server/spec/entitlement_migrate_spec.rb:53 # Entitlement Migrate should move entire entitlement count when none specified
rspec ./server/spec/multi_org_spec.rb:196 # Multi Org Shares survives refresh on both orgs
rspec ./server/spec/multi_org_spec.rb:215 # Multi Org Shares binds a pool to a share consumer
rspec ./server/spec/multi_org_spec.rb:269 # Multi Org Shares does not allow to over share a pool
rspec ./server/spec/multi_org_spec.rb:287 # Multi Org Shares adjusts shared pool quantity when source entitlement is updated
rspec ./server/spec/multi_org_spec.rb:303 # Multi Org Shares deletes a shared pool when source entitlement is revoked
rspec ./server/spec/multi_org_spec.rb:320 # Multi Org Shares should allow multi share even without multi-entitlement
rspec ./server/spec/multi_org_spec.rb:330 # Multi Org Shares uses an existing product in a share recipient
rspec ./server/spec/multi_org_spec.rb:351 # Multi Org Shares replaces one product share with a newer product share
rspec ./server/spec/multi_org_spec.rb:401 # Multi Org Shares prohibits sharing a share
rspec ./server/spec/multi_org_spec.rb:436 # Multi Org Shares prohibits sharing a dev pool
rspec ./server/spec/multi_org_spec.rb:458 # Multi Org Shares prohibits sharing an unmapped guest pool
rspec ./server/spec/multi_org_spec.rb:472 # Multi Org Shares does not list unsharable pools for share consumers
rspec ./server/spec/multi_org_spec.rb:485 # Multi Org Shares lists pools for share correctly based on quantity
rspec ./server/spec/multi_org_spec.rb:572 # Multi Org Shares reduces share pool quantity before revoking share entitlements
rspec ./server/spec/multi_org_spec.rb:615 # Multi Org Shares reduces share pool quantity and revokes share entitlements
rspec ./server/spec/multi_org_spec.rb:657 # Multi Org Shares revokes share entitlements by creation across master and shared pools
rspec ./server/spec/owner_resource_spec.rb:31 # Owner Resource allows consumers to view their service levels
rspec ./server/spec/owner_resource_spec.rb:77 # Owner Resource lets owners list pools
rspec ./server/spec/owner_resource_spec.rb:85 # Owner Resource lets owners list pools in pages
rspec ./server/spec/owner_resource_spec.rb:96 # Owner Resource lets owners update subscription
rspec ./server/spec/owner_resource_spec.rb:112 # Owner Resource lets owners list pools in pages for a consumer
rspec ./server/spec/owner_resource_spec.rb:140 # Owner Resource lets only superadmin users refresh pools
rspec ./server/spec/owner_resource_spec.rb:198 # Owner Resource does allow the default service level only to get updated
rspec ./server/spec/owner_resource_spec.rb:218 # Owner Resource lets owners update their default service level
rspec ./server/spec/owner_resource_spec.rb:290 # Owner Resource lets owners show service levels
rspec ./server/spec/owner_resource_spec.rb:329 # Owner Resource allows service level exempt service levels to be filtered out
rspec ./server/spec/owner_resource_spec.rb:381 # Owner Resource should return calculated attributes
rspec ./server/spec/owner_resource_spec.rb:427 # Owner Resource should not double bind when healing an org
rspec ./server/spec/owner_resource_spec.rb:607 # Owner Resource Pool Filter Tests lets owners filter pools by single filter
rspec ./server/spec/owner_resource_spec.rb:622 # Owner Resource Pool Filter Tests lets owners filter pools by multiple filter
rspec ./server/spec/owner_resource_spec.rb:628 # Owner Resource Pool Filter Tests list pools with matches against provided products
rspec ./server/spec/owner_resource_spec.rb:658 # Owner Resource Pool Filter Tests should allow user to list standard pool by subscription id
rspec ./server/spec/owner_resource_spec.rb:666 # Owner Resource Pool Filter Tests should allow user to list bonus pool also by subscription id
rspec ./server/spec/owner_resource_spec.rb:736 # Owner Resource Owner Info Tests my systems user should filter consumer counts in owner info
rspec ./server/spec/owner_resource_spec.rb:803 # Owner Resource Entitlement List Tests can fetch all entitlements of an owner
rspec ./server/spec/owner_resource_spec.rb:808 # Owner Resource Entitlement List Tests can filter all entitlements by using matches param
rspec ./server/spec/owner_resource_spec.rb:813 # Owner Resource Entitlement List Tests can filter consumer entitlements by product attribute
rspec ./server/spec/owner_resource_spec.rb:841 # Owner Resource Future Pool Tests can fetch current pools
rspec ./server/spec/owner_resource_spec.rb:847 # Owner Resource Future Pool Tests can fetch current and future pools
rspec ./server/spec/owner_resource_spec.rb:852 # Owner Resource Future Pool Tests can fetch future pools
rspec ./server/spec/owner_resource_spec.rb:859 # Owner Resource Future Pool Tests can fetch future pools based on activeon date
rspec ./server/spec/owner_resource_spec.rb:867 # Owner Resource Future Pool Tests cannot use both add_future and only_future flags
rspec ./server/spec/owner_resource_spec.rb:910 # Owner Resource counting feature should count consumers only with specific skus
rspec ./server/spec/owner_resource_spec.rb:931 # Owner Resource counting feature should count consumers only with specific subscriptionIds
rspec ./server/spec/owner_resource_spec.rb:952 # Owner Resource counting feature should count consumer only with specific contract numbers
rspec ./server/spec/instance_spec.rb:61 # Instance Based Subscriptions should auto-subscribe physical systems with quantity 2 per socket pair
rspec ./server/spec/instance_spec.rb:74 # Instance Based Subscriptions should auto-subscribe guest systems with quantity 1
rspec ./server/spec/vcpu_spec.rb:38 # vCPU Limiting consumer status should be valid when consumer vCPUs are covered
rspec ./server/spec/vcpu_spec.rb:59 # vCPU Limiting consumer status should be partial when consumer vCPUs are not covered
rspec ./server/spec/vcpu_spec.rb:84 # vCPU Limiting can heal single entitlement when vcpu limited
rspec ./server/spec/vcpu_spec.rb:100 # vCPU Limiting can heal correct quantity when vcpu limited
rspec ./server/spec/vcpu_spec.rb:117 # vCPU Limiting will not heal when system vcpu is not covered by any entitlements
rspec ./server/spec/content_access_spec.rb:257 # Content Access will show up in the owner at distributor on export/import
rspec ./server/spec/content_access_spec.rb:290 # Content Access will express on consumers at the distributor
rspec ./server/spec/export_spec.rb[1:1:1:1] # Export Async Export Tests it should behave like exporter exports consumer types
rspec ./server/spec/export_spec.rb[1:1:1:2] # Export Async Export Tests it should behave like exporter exports consumers
rspec ./server/spec/export_spec.rb[1:1:1:3] # Export Async Export Tests it should behave like exporter exports CDN URL
rspec ./server/spec/export_spec.rb[1:1:1:4] # Export Async Export Tests it should behave like exporter should not include consumer json in entitlements
rspec ./server/spec/export_spec.rb[1:1:1:5] # Export Async Export Tests it should behave like exporter exports candlepin 0.x backward compatable product definitions
rspec ./server/spec/export_spec.rb[1:1:1:6] # Export Async Export Tests it should behave like exporter exports entitlement certificates
rspec ./server/spec/export_spec.rb[1:1:1:7] # Export Async Export Tests it should behave like exporter exports regenerated entitlement certificates
rspec ./server/spec/export_spec.rb[1:1:1:8] # Export Async Export Tests it should behave like exporter should support only exporting certificates
rspec ./server/spec/export_spec.rb[1:1:1:9] # Export Async Export Tests it should behave like exporter exported certs should have nothing else but meta and entitlement_certificate
rspec ./server/spec/export_spec.rb[1:1:1:10] # Export Async Export Tests it should behave like exporter exports rules
rspec ./server/spec/export_spec.rb[1:1:1:11] # Export Async Export Tests it should behave like exporter should export products
rspec ./server/spec/export_spec.rb[1:1:1:12] # Export Async Export Tests it should behave like exporter should allow manifest creation with read only user
rspec ./server/spec/export_spec.rb[1:2:1:1] # Export Sync Export Tests it should behave like exporter exports consumer types
rspec ./server/spec/export_spec.rb[1:2:1:2] # Export Sync Export Tests it should behave like exporter exports consumers
rspec ./server/spec/export_spec.rb[1:2:1:3] # Export Sync Export Tests it should behave like exporter exports CDN URL
rspec ./server/spec/export_spec.rb[1:2:1:4] # Export Sync Export Tests it should behave like exporter should not include consumer json in entitlements
rspec ./server/spec/export_spec.rb[1:2:1:5] # Export Sync Export Tests it should behave like exporter exports candlepin 0.x backward compatable product definitions
rspec ./server/spec/export_spec.rb[1:2:1:6] # Export Sync Export Tests it should behave like exporter exports entitlement certificates
rspec ./server/spec/export_spec.rb[1:2:1:7] # Export Sync Export Tests it should behave like exporter exports regenerated entitlement certificates
rspec ./server/spec/export_spec.rb[1:2:1:8] # Export Sync Export Tests it should behave like exporter should support only exporting certificates
rspec ./server/spec/export_spec.rb[1:2:1:9] # Export Sync Export Tests it should behave like exporter exported certs should have nothing else but meta and entitlement_certificate
rspec ./server/spec/export_spec.rb[1:2:1:10] # Export Sync Export Tests it should behave like exporter exports rules
rspec ./server/spec/export_spec.rb[1:2:1:11] # Export Sync Export Tests it should behave like exporter should export products
rspec ./server/spec/export_spec.rb[1:2:1:12] # Export Sync Export Tests it should behave like exporter should allow manifest creation with read only user
rspec ./server/spec/custom_product_spec.rb:13 # Custom Product create custom products and subscribe
rspec ./server/spec/consumer_resource_spec.rb:23 # Consumer Resource should receive paged data back when requested
rspec ./server/spec/consumer_resource_spec.rb:53 # Consumer Resource should not re-calculate quantity attributes when fetching entitlements
rspec ./server/spec/consumer_resource_spec.rb:66 # Consumer Resource should block consumers from using other org's pools
rspec ./server/spec/consumer_resource_spec.rb:110 # Consumer Resource should set compliance status and update compliance status
rspec ./server/spec/consumer_resource_spec.rb:361 # Consumer Resource should allow consumer to bind to products supporting multiple architectures
rspec ./server/spec/consumer_resource_spec.rb:374 # Consumer Resource updates consumer updated timestamp on bind
rspec ./server/spec/consumer_resource_spec.rb:391 # Consumer Resource consumer can async bind by product id
rspec ./server/spec/consumer_resource_spec.rb:410 # Consumer Resource should allow consumer to bind to products based on product socket quantity across pools
rspec ./server/spec/consumer_resource_spec.rb:484 # Consumer Resource should allow the installed products to be enriched with product information
rspec ./server/spec/consumer_resource_spec.rb:594 # Consumer Resource should allow a consumer to update their service level
rspec ./server/spec/consumer_resource_spec.rb:653 # Consumer Resource should not list service levels from expired pools
rspec ./server/spec/consumer_resource_spec.rb:673 # Consumer Resource should allow a consumer dry run an autosubscribe based on service level
rspec ./server/spec/consumer_resource_spec.rb:729 # Consumer Resource should recognize support level exempt attribute
rspec ./server/spec/consumer_resource_spec.rb:787 # Consumer Resource should return empty list for dry run where all pools are blocked because of consumer type
rspec ./server/spec/consumer_resource_spec.rb:827 # Consumer Resource should allow a consumer to unregister and free up the pool
rspec ./server/spec/consumer_resource_spec.rb:842 # Consumer Resource should allow a consumer to bind when the POST body is empty string
rspec ./server/spec/consumer_resource_spec.rb:855 # Consumer Resource should allow a consumer to unregister and free up the pools consumed in a batch
rspec ./server/spec/consumer_resource_spec.rb:928 # Consumer Resource should bind correct quantity when not specified
rspec ./server/spec/consumer_resource_spec.rb:943 # Consumer Resource should bind quantity 1 when suggested is 0 and not specified
rspec ./server/spec/consumer_resource_spec.rb:960 # Consumer Resource should bind correct future quantity when fully subscribed today
rspec ./server/spec/consumer_resource_spec.rb:1014 # Consumer Resource updates consumer entitlement count on bind and revoke
rspec ./server/spec/import_update_spec.rb:26 # Import Update should successfully update the import
rspec ./server/spec/import_update_spec.rb:45 # Import Update should remove all imported subscriptions if import has no entitlements
rspec ./server/spec/environment_cert_v3_spec.rb:15 # Environments Certificate V3 filters content not promoted to environment
rspec ./server/spec/environment_cert_v3_spec.rb:50 # Environments Certificate V3 regenerates certificates after promoting/demoting content
rspec ./server/spec/ueber_cert_spec.rb:26 # Uebercert contains all content for the entire org
rspec ./server/spec/distributor_capability_spec.rb:139 # Distributor Capability can stop bind based on consumer capabilities
rspec ./server/spec/owner_product_resource_spec.rb:23 # Owner Product Resource should fail when fetching non-existing products
rspec ./server/spec/owner_product_resource_spec.rb:29 # Owner Product Resource updates individual product fields
rspec ./server/spec/owner_product_resource_spec.rb:66 # Owner Product Resource does not update product name
rspec ./server/spec/owner_product_resource_spec.rb:77 # Owner Product Resource removes content from products
rspec ./server/spec/owner_product_resource_spec.rb:89 # Owner Product Resource allows regular users to view products
rspec ./server/spec/owner_product_resource_spec.rb:96 # Owner Product Resource create two products with the same name
rspec ./server/spec/owner_product_resource_spec.rb:103 # Owner Product Resource retrieves the owners of an active product
rspec ./server/spec/owner_product_resource_spec.rb:116 # Owner Product Resource refreshes pools for owner on subscription creation
rspec ./server/spec/owner_product_resource_spec.rb:187 # Owner Product Resource refreshes pools for orgs owning products
rspec ./server/spec/owner_product_resource_spec.rb:221 # Owner Product Resource lists all products in bulk fetch
rspec ./server/spec/owner_product_resource_spec.rb:249 # Owner Product Resource lists products in pages
rspec ./server/spec/owner_product_resource_spec.rb:281 # Owner Product Resource lists products in sorted pages
rspec ./server/spec/owner_product_resource_spec.rb:310 # Owner Product Resource should return correct exception for contraint violations
rspec ./server/spec/owner_product_resource_spec.rb:320 # Owner Product Resource bad request on attempt to delete product attached to sub
rspec ./server/spec/owner_product_resource_spec.rb:332 # Owner Product Resource bad request on attempt to delete provided product attached to sub
rspec ./server/spec/owner_product_resource_spec.rb:344 # Owner Product Resource bad request on attempt to delete derived product attached to sub
rspec ./server/spec/owner_product_resource_spec.rb:356 # Owner Product Resource bad request on attempt to delete derived provided product attached to sub
rspec ./server/spec/post_bind_bonus_pool_spec.rb:160 # Post bind bonus pool updates should create entitlement derived pool in hosted mode
rspec ./server/spec/post_bind_bonus_pool_spec.rb:173 # Post bind bonus pool updates should create entitlement derived pool in standalone mode
rspec ./server/spec/post_bind_bonus_pool_spec.rb:187 # Post bind bonus pool updates should create stack derived pool in hosted mode
rspec ./server/spec/post_bind_bonus_pool_spec.rb:200 # Post bind bonus pool updates should create stack derived pool in standalone mode
rspec ./server/spec/post_bind_bonus_pool_spec.rb:213 # Post bind bonus pool updates should create entitlement derived pool for every bind
rspec ./server/spec/post_bind_bonus_pool_spec.rb:224 # Post bind bonus pool updates should decrement bonus pool quantity when finite virt limited master pool is partially exported
rspec ./server/spec/post_bind_bonus_pool_spec.rb:235 # Post bind bonus pool updates should decrement bonus pool quantity when finite virt limited master pool is partially shared
rspec ./server/spec/post_bind_bonus_pool_spec.rb:246 # Post bind bonus pool updates should update bonus pool quantity when export entitlement quantity is updated
rspec ./server/spec/post_bind_bonus_pool_spec.rb:259 # Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is partially exported
rspec ./server/spec/post_bind_bonus_pool_spec.rb:269 # Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is partially shared
rspec ./server/spec/post_bind_bonus_pool_spec.rb:279 # Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is consumed by non manifest consumer
rspec ./server/spec/post_bind_bonus_pool_spec.rb:294 # Post bind bonus pool updates should not change bonus pool quantity when unlimited virt limited master pool is consumed by non sharing consumer
rspec ./server/spec/post_bind_bonus_pool_spec.rb:328 # Post bind bonus pool updates should not change hostlimited entitlement derived pool quantity when source entitlement's quantity is reduced
rspec ./server/spec/post_bind_bonus_pool_spec.rb:332 # Post bind bonus pool updates should change unlimited virtlimited entitlement derived pool quantity when source entitlement's quantity is reduced
rspec ./server/spec/post_bind_bonus_pool_spec.rb:337 # Post bind bonus pool updates should change limited virtlimited entitlement derived pool quantity when source entitlement's quantity is reduced
rspec ./server/spec/post_bind_bonus_pool_spec.rb:342 # Post bind bonus pool updates should revoke excess entitlements when finite virt limited master pool is exported
rspec ./server/spec/post_bind_bonus_pool_spec.rb:361 # Post bind bonus pool updates should revoke only sufficient entitlements when finite virt limited master pool is exported
rspec ./server/spec/post_bind_bonus_pool_spec.rb:395 # Post bind bonus pool updates should revoke sufficient entitlements when entitlement quantity is updated
rspec ./server/spec/post_bind_bonus_pool_spec.rb:423 # Post bind bonus pool updates should not revoke excess entitlements when unlimited virt limited master pool is partially exported
rspec ./server/spec/post_bind_bonus_pool_spec.rb:442 # Post bind bonus pool updates should not revoke excess entitlements when unlimited virt limited master pool is consumed by non manifest consumer
rspec ./server/spec/job_status_spec.rb:16 # Job Status should contain the owner key
rspec ./server/spec/job_status_spec.rb:23 # Job Status should contain the target type
rspec ./server/spec/job_status_spec.rb:31 # Job Status should be findable by owner key
rspec ./server/spec/job_status_spec.rb:43 # Job Status should only find jobs with the correct owner key
rspec ./server/spec/job_status_spec.rb:70 # Job Status should find an empty list if the owner key is wrong
rspec ./server/spec/job_status_spec.rb:74 # Job Status should return an error if no owner key is supplied
rspec ./server/spec/job_status_spec.rb:80 # Job Status should cancel a job
rspec ./server/spec/job_status_spec.rb:99 # Job Status should contain the system target type and id for async binds
rspec ./server/spec/job_status_spec.rb:111 # Job Status should allow admin to view any job status
rspec ./server/spec/job_status_spec.rb:118 # Job Status should allow user to view status of own job
rspec ./server/spec/job_status_spec.rb:125 # Job Status should allow user to view job status of consumer in managed org
rspec ./server/spec/job_status_spec.rb:134 # Job Status should not allow user to view job status outside of managed org
rspec ./server/spec/job_status_spec.rb:146 # Job Status should allow consumer to view status of own job
rspec ./server/spec/job_status_spec.rb:155 # Job Status should not allow consumer to access another consumers job status
rspec ./server/spec/pool_unlimited_master_spec.rb:69 # Unlimited Master Pools allows system to consume unlimited quantity pool
rspec ./server/spec/pool_unlimited_master_spec.rb:76 # Unlimited Master Pools allows system to consume limited virt quantity pool
rspec ./server/spec/pool_unlimited_master_spec.rb:91 # Unlimited Master Pools allows mapped guest to consume unlimited quantity pool
rspec ./server/spec/pool_unlimited_master_spec.rb:107 # Unlimited Master Pools allows mapped guest to consume limited host dependendent pool
rspec ./server/spec/pool_unlimited_master_spec.rb:124 # Unlimited Master Pools allows unmapped guest to consume unlimited quantity pool
rspec ./server/spec/environment_spec.rb:181 # Environments filters content not promoted to environment
rspec ./server/spec/environment_spec.rb:215 # Environments regenerates certificates after promoting/demoting content
rspec ./server/spec/entitlement_certificate_spec.rb:36 # Entitlement Certificate is available after consuming an entitlement
rspec ./server/spec/entitlement_certificate_spec.rb:40 # Entitlement Certificate can be manually regenerated for a consumer
rspec ./server/spec/entitlement_certificate_spec.rb:52 # Entitlement Certificate can regenerate certificate by entitlement id
rspec ./server/spec/entitlement_certificate_spec.rb:64 # Entitlement Certificate can be manually regenerated for a product
rspec ./server/spec/entitlement_certificate_spec.rb:83 # Entitlement Certificate will be regenerated when changing existing subscription's end date
rspec ./server/spec/entitlement_certificate_spec.rb:96 # Entitlement Certificate single entitlement in excess will be deleted when existing subscription quantity is decreased
rspec ./server/spec/entitlement_certificate_spec.rb:111 # Entitlement Certificate multiple entitlement in excess will be deleted when existing subscription quantity is decreased
rspec ./server/spec/entitlement_certificate_spec.rb:127 # Entitlement Certificate will be regenerated when existing subscription's quantity and dates are changed
rspec ./server/spec/entitlement_certificate_spec.rb:134 # Entitlement Certificate will be regenerated and dates will have the same values as that of the subscription which was changed
rspec ./server/spec/entitlement_certificate_spec.rb:142 # Entitlement Certificate won't let one consumer regenerate another's certificates
rspec ./server/spec/entitlement_certificate_spec.rb:151 # Entitlement Certificate won't let one consumer regenerate another's certificate by entitlement
rspec ./server/spec/entitlement_certificate_spec.rb:161 # Entitlement Certificate regenerates entitlement certificates by product for all owners
rspec ./server/spec/multiplier_spec.rb:12 # Multiplier Products should have the correct quantity
rspec ./server/spec/multiplier_spec.rb:22 # Multiplier Products should default the multiplier to 1 if it is negative
rspec ./server/spec/multiplier_spec.rb:32 # Multiplier Products should default the multiplier to 1 if it is zero
rspec ./server/spec/multiplier_spec.rb:42 # Multiplier Products should have the correct quantity after a refresh
rspec ./server/spec/sku_level_enable_override_spec.rb:18 # SKU Level Enable Override sku override for enable shows on provided product in entitlement
rspec ./server/spec/sku_level_enable_override_spec.rb:43 # SKU Level Enable Override sku override for disable shows on provided product in entitlement
rspec ./server/spec/sku_level_enable_override_spec.rb:68 # SKU Level Enable Override sku override for enabled superceded by environment promotion
rspec ./server/spec/sku_level_enable_override_spec.rb:106 # SKU Level Enable Override sku override for enable shows on provided product in V1 entitlement
rspec ./server/spec/sku_level_enable_override_spec.rb:123 # SKU Level Enable Override sku override for disable shows on provided product in V1 entitlement
rspec ./server/spec/sku_level_enable_override_spec.rb:140 # SKU Level Enable Override sku override for enabled superceded by environment promotion V1
rspec ./server/spec/import_and_undo_exports_in_parallel_spec.rb:18 # Import and Undo Manifest in parallel should (sync) import and undo manifest in parallel successfully - import first
rspec ./server/spec/import_and_undo_exports_in_parallel_spec.rb:45 # Import and Undo Manifest in parallel should (sync) import and undo manifest in parallel successfully - undo first
rspec ./server/spec/import_update_single_pool_spec.rb:16 # Import Single Pool Update should be able to maintain multiple imported entitlements from the same pool
rspec ./server/spec/product_resource_spec.rb:23 # Product Resource should fail when fetching non-existing products
rspec ./server/spec/product_resource_spec.rb:29 # Product Resource throws exception on write operations
rspec ./server/spec/product_resource_spec.rb:100 # Product Resource retrieves owners by product
rspec ./server/spec/product_resource_spec.rb:169 # Product Resource refreshes pools for orgs owning products
rspec ./server/spec/product_resource_spec.rb:217 # Product Resource throws exception on get_owners with no products
rspec ./server/spec/product_resource_spec.rb:223 # Product Resource throws exception on refresh with no products
rspec ./server/spec/product_resource_spec.rb:229 # Product Resource censors owner information on owner-agnostic retrieval
rspec ./server/spec/derived_product_spec.rb:104 # Derived Products prefers a host-autobind virt-only sub-pool to instance based pool during guest autobind
rspec ./server/spec/derived_product_spec.rb:130 # Derived Products transfers sub-product data to main pool
rspec ./server/spec/derived_product_spec.rb:159 # Derived Products allows guest to consume sub product pool
rspec ./server/spec/derived_product_spec.rb:172 # Derived Products should not be visible by distributor that does not have capability after basic search
rspec ./server/spec/derived_product_spec.rb:177 # Derived Products should be visible by distributor that does not have capability after list all
rspec ./server/spec/derived_product_spec.rb:188 # Derived Products prevents distributor from attaching without necessisary capabilities
rspec ./server/spec/derived_product_spec.rb:199 # Derived Products distributor entitlement cert includes derived content
rspec ./server/spec/derived_product_spec.rb:225 # Derived Products distributor entitlement cert includes derived modifier content
rspec ./server/spec/derived_product_spec.rb:261 # Derived Products host entitlement cert does not include derived content
rspec ./server/spec/entitlement_certificate_v3_spec.rb:78 # Entitlement Certificate V3 generated a version 3.3 certificate when requesting a 3.0 certificate
rspec ./server/spec/entitlement_certificate_v3_spec.rb:90 # Entitlement Certificate V3 generated a version 3.3 certificate
rspec ./server/spec/entitlement_certificate_v3_spec.rb:97 # Entitlement Certificate V3 generated the correct body in the blob
rspec ./server/spec/entitlement_certificate_v3_spec.rb:165 # Entitlement Certificate V3 verify branding info is correct in json blob
rspec ./server/spec/entitlement_certificate_v3_spec.rb:182 # Entitlement Certificate V3 encoded the content urls
rspec ./server/spec/entitlement_certificate_v3_spec.rb:205 # Entitlement Certificate V3 encoded many content urls
rspec ./server/spec/entitlement_certificate_v3_spec.rb:236 # Entitlement Certificate V3 generates a version 3.3 certificate on distributors with a cert_v3 capability
rspec ./server/spec/serialization_spec.rb:35 # Pool serialization references owner as a link
rspec ./server/spec/serialization_spec.rb:59 # Entitlement Serialization references pool as a link
rspec ./server/spec/core_spec.rb:35 # Core Limiting can consume core entitlement if requesting v3.2 certificate
rspec ./server/spec/core_spec.rb:42 # Core Limiting consumer status should be valid when consumer core is covered
rspec ./server/spec/core_spec.rb:62 # Core Limiting consumer status should be partial when consumer core not covered
rspec ./server/spec/core_spec.rb:84 # Core Limiting consumer status should be partial when consumer core covered but not sockets
rspec ./server/spec/core_spec.rb:111 # Core Limiting consumer status should be partial when consumer sockets covered but not core
rspec ./server/spec/core_spec.rb:138 # Core Limiting consumer status is valid when both core and sockets are covered
rspec ./server/spec/core_spec.rb:162 # Core Limiting can heal when core limited
rspec ./server/spec/core_spec.rb:177 # Core Limiting will not heal when system core is not covered by any entitlements
rspec ./server/spec/core_spec.rb:192 # Core Limiting can heal when both core and socket limited
rspec ./server/spec/entitlement_resource_spec.rb:26 # Entitlement Resource can filter all entitlements by using matches param
rspec ./server/spec/entitlement_resource_spec.rb:34 # Entitlement Resource should not re-calculate attributes when fetching entitlements
rspec ./server/spec/entitlement_resource_spec.rb:41 # Entitlement Resource can filter all entitlements by product attribute
rspec ./server/spec/entitlement_resource_spec.rb:53 # Entitlement Resource can filter consumer entitlements by product attribute
rspec ./server/spec/entitlement_resource_spec.rb:66 # Entitlement Resource can filter consumer entitlements by using matches param
rspec ./server/spec/entitlement_resource_spec.rb:76 # Entitlement Resource should allow entitlement certificate regeneration based on product id
rspec ./server/spec/entitlement_resource_spec.rb:84 # Entitlement Resource allows filtering certificates by serial number
rspec ./server/spec/entitlement_resource_spec.rb:108 # Entitlement Resource allows listing certificates by serial numbers
rspec ./server/spec/entitlement_resource_spec.rb:113 # Entitlement Resource should allow consumer to change entitlement quantity
rspec ./server/spec/entitlement_resource_spec.rb:146 # Entitlement Resource should not allow consumer to change entitlement quantity out of bounds
rspec ./server/spec/entitlement_resource_spec.rb:168 # Entitlement Resource should not allow consumer to change entitlement quantity non-multi
rspec ./server/spec/entitlement_resource_spec.rb:183 # Entitlement Resource should handle concurrent requests to pool and maintain quanities
rspec ./server/spec/entitlement_resource_spec.rb:205 # Entitlement Resource should not allow over consumption in pool
rspec ./server/spec/entitlement_resource_spec.rb:241 # Entitlement Resource should end at zero quantity consumed when all consumers are unregistered
rspec ./server/spec/ram_spec.rb:46 # RAM Limiting can consume ram entitlement if requesting v3.1 certificate
rspec ./server/spec/ram_spec.rb:53 # RAM Limiting consumer status should be valid when consumer RAM is covered
rspec ./server/spec/ram_spec.rb:73 # RAM Limiting consumer status should be partial when consumer RAM not covered
rspec ./server/spec/ram_spec.rb:95 # RAM Limiting consumer status should be partial when consumer RAM covered but not sockets
rspec ./server/spec/ram_spec.rb:122 # RAM Limiting consumer status should be partial when consumer sockets covered but not RAM
rspec ./server/spec/ram_spec.rb:149 # RAM Limiting consumer status is valid when both RAM and sockets are covered
rspec ./server/spec/ram_spec.rb:173 # RAM Limiting can heal when RAM limited
rspec ./server/spec/ram_spec.rb:188 # RAM Limiting will not heal when system RAM is not covered by any entitlements
rspec ./server/spec/ram_spec.rb:203 # RAM Limiting can heal when both RAM and socket limited
rspec ./server/spec/ram_spec.rb:226 # RAM Limiting consumer status should be green when stacking a single ram entitlement
rspec ./server/spec/ram_spec.rb:253 # RAM Limiting consumer status should be green when stacking a single ram entitlement with proper quantity
rspec ./server/spec/ram_spec.rb:280 # RAM Limiting autobind should completely cover ram products
rspec ./server/spec/ram_spec.rb:308 # RAM Limiting healing should add ram entitlements to cover consumer
rspec ./server/spec/healing_spec.rb:27 # Healing entitles non-compliant products
rspec ./server/spec/healing_spec.rb:42 # Healing entitles non-compliant products despite a valid future entitlement
rspec ./server/spec/healing_spec.rb:61 # Healing entitles non-compliant products at a future date
rspec ./server/spec/healing_spec.rb:81 # Healing can multi-entitle stacked entitlements
rspec ./server/spec/healing_spec.rb:94 # Healing can complete partial stacks with no installed prod
rspec ./server/spec/healing_spec.rb:112 # Healing can multi-entitle stacked entitlements across pools
rspec ./server/spec/healing_spec.rb:129 # Healing can complete a pre-existing partial stack
rspec ./server/spec/autobind_disabled_for_owner_spec.rb:34 # Autobind Disabled On Owner still allows dev consumer to autobind when disabled on owner
rspec ./server/spec/storage_band_spec.rb:33 # Band Limiting pool should have the correct quantity based off of the product multiplier
rspec ./server/spec/storage_band_spec.rb:39 # Band Limiting system status should be valid when all storage band usage is covered
rspec ./server/spec/storage_band_spec.rb:51 # Band Limiting system status should be partial when only part of the storage band usage is covered
rspec ./server/spec/storage_band_spec.rb:63 # Band Limiting storage band entitlements from same subscription can be stacked to cover entire system
rspec ./server/spec/storage_band_spec.rb:86 # Band Limiting storage band entitlements will auto-attach correct quantity
rspec ./server/spec/storage_band_spec.rb:100 # Band Limiting storage band entitlements will auto-heal correctly
rspec ./server/spec/storage_band_spec.rb:118 # Band Limiting storage band entitlement auto-attach without fact set consumes one entitlement
rspec ./server/spec/consumer_resource_activation_key_spec.rb:18 # Consumer Resource Activation Key should allow a consumer to register with activation keys
rspec ./server/spec/consumer_resource_activation_key_spec.rb:33 # Consumer Resource Activation Key should allow a consumer to register with an activation key with an auto-attach
rspec ./server/spec/consumer_resource_activation_key_spec.rb:80 # Consumer Resource Activation Key should allow a consumer to register with activation keys with service level
rspec ./server/spec/consumer_resource_activation_key_spec.rb:116 # Consumer Resource Activation Key should allow a consumer to register with activation keys with null quantity
rspec ./server/spec/consumer_resource_activation_key_spec.rb:137 # Consumer Resource Activation Key should allow a consumer to register with an activation key with an auto-attach across pools
rspec ./server/spec/consumer_resource_activation_key_spec.rb:182 # Consumer Resource Activation Key should bind to subs when service level varies
rspec ./server/spec/consumer_resource_activation_key_spec.rb:206 # Consumer Resource Activation Key should not allow a consumer to register with no-availability pool

Buildr aborted!
RuntimeError : /home/crog/.rvm/rubies/ruby-2.3.3/bin/ruby -I/home/crog/.rvm/gems/ruby-2.3.3/gems/rspec-core-3.6.0/lib:/home/crog/.rvm/gems/ruby-2.3.3/gems/rspec-support-3.6.0/lib /home/crog/.rvm/gems/ruby-2.3.3/gems/rspec-core-3.6.0/exe/rspec --pattern spec/\*\*\{,/\*/\*\*\}/\*_spec.rb --color --format documentation --require /home/crog/devel/candlepin-origin/tasks/failure_formatter --format ModifiedRSpec::FailuresFormatter -I /home/crog/devel/candlepin-origin/server/spec -I /home/crog/devel/candlepin-origin/server/client/ruby /home/crog/devel/candlepin-origin/server/spec/system_admin_spec.rb /home/crog/devel/candlepin-origin/server/spec/virt_spec.rb /home/crog/devel/candlepin-origin/server/spec/guestid_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_bonus_pool_provided_spec.rb /home/crog/devel/candlepin-origin/server/spec/core_and_ram_spec.rb /home/crog/devel/candlepin-origin/server/spec/oauth_spec.rb /home/crog/devel/candlepin-origin/server/spec/content_versioning_spec.rb /home/crog/devel/candlepin-origin/server/spec/unbind_spec.rb /home/crog/devel/candlepin-origin/server/spec/authorization_spec.rb /home/crog/devel/candlepin-origin/server/spec/compliance_reasons_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_resource_dev_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_resource_host_guest_spec.rb /home/crog/devel/candlepin-origin/server/spec/cert_revocation_spec.rb /home/crog/devel/candlepin-origin/server/spec/owner_content_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/qpid_spec.rb /home/crog/devel/candlepin-origin/server/spec/one_sub_pool_per_stack_spec.rb /home/crog/devel/candlepin-origin/server/spec/pool_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/role_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/entitlement_spec.rb /home/crog/devel/candlepin-origin/server/spec/conditional_content_spec.rb /home/crog/devel/candlepin-origin/server/spec/deleted_consumer_spec.rb /home/crog/devel/candlepin-origin/server/spec/activation_key_spec.rb /home/crog/devel/candlepin-origin/server/spec/virt_only_spec.rb /home/crog/devel/candlepin-origin/server/spec/domain_consumer_spec.rb /home/crog/devel/candlepin-origin/server/spec/client_v1_size_spec.rb /home/crog/devel/candlepin-origin/server/spec/status_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/job_schedule_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_checkin_spec.rb /home/crog/devel/candlepin-origin/server/spec/autobind_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_cleanup_spec.rb /home/crog/devel/candlepin-origin/server/spec/product_versioning_spec.rb /home/crog/devel/candlepin-origin/server/spec/unmapped_guest_spec.rb /home/crog/devel/candlepin-origin/server/spec/subscription_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/hypervisor_check_in_spec.rb /home/crog/devel/candlepin-origin/server/spec/filter_response_spec.rb /home/crog/devel/candlepin-origin/server/spec/entitlement_migrate_spec.rb /home/crog/devel/candlepin-origin/server/spec/multi_org_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_warning_spec.rb /home/crog/devel/candlepin-origin/server/spec/owner_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/instance_spec.rb /home/crog/devel/candlepin-origin/server/spec/user_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/vcpu_spec.rb /home/crog/devel/candlepin-origin/server/spec/content_access_spec.rb /home/crog/devel/candlepin-origin/server/spec/export_spec.rb /home/crog/devel/candlepin-origin/server/spec/rules_import_spec.rb /home/crog/devel/candlepin-origin/server/spec/custom_product_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_update_spec.rb /home/crog/devel/candlepin-origin/server/spec/environment_cert_v3_spec.rb /home/crog/devel/candlepin-origin/server/spec/ueber_cert_spec.rb /home/crog/devel/candlepin-origin/server/spec/distributor_capability_spec.rb /home/crog/devel/candlepin-origin/server/spec/owner_product_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/post_bind_bonus_pool_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_facts_spec.rb /home/crog/devel/candlepin-origin/server/spec/person_consumer_spec.rb /home/crog/devel/candlepin-origin/server/spec/product_cert_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_spec.rb /home/crog/devel/candlepin-origin/server/spec/identity_spec.rb /home/crog/devel/candlepin-origin/server/spec/job_status_spec.rb /home/crog/devel/candlepin-origin/server/spec/pool_unlimited_master_spec.rb /home/crog/devel/candlepin-origin/server/spec/environment_spec.rb /home/crog/devel/candlepin-origin/server/spec/entitlement_certificate_spec.rb /home/crog/devel/candlepin-origin/server/spec/localization_spec.rb /home/crog/devel/candlepin-origin/server/spec/multiplier_spec.rb /home/crog/devel/candlepin-origin/server/spec/sku_level_enable_override_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_and_undo_exports_in_parallel_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_update_single_pool_spec.rb /home/crog/devel/candlepin-origin/server/spec/product_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/refresh_pools_spec.rb /home/crog/devel/candlepin-origin/server/spec/content_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_excess_spec.rb /home/crog/devel/candlepin-origin/server/spec/content_delivery_network_spec.rb /home/crog/devel/candlepin-origin/server/spec/derived_product_spec.rb /home/crog/devel/candlepin-origin/server/spec/entitlement_certificate_v3_spec.rb /home/crog/devel/candlepin-origin/server/spec/serialization_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_resource_content_spec.rb /home/crog/devel/candlepin-origin/server/spec/core_spec.rb /home/crog/devel/candlepin-origin/server/spec/derived_product_import_spec.rb /home/crog/devel/candlepin-origin/server/spec/entitlement_resource_spec.rb /home/crog/devel/candlepin-origin/server/spec/ram_spec.rb /home/crog/devel/candlepin-origin/server/spec/healing_spec.rb /home/crog/devel/candlepin-origin/server/spec/autobind_disabled_for_owner_spec.rb /home/crog/devel/candlepin-origin/server/spec/import_environment_spec.rb /home/crog/devel/candlepin-origin/server/spec/storage_band_spec.rb /home/crog/devel/candlepin-origin/server/spec/consumer_resource_activation_key_spec.rb failed

(See full trace by running task with --trace)
(12:02:54) crog@cl-vm-1:~/devel/candlepin-origin/server(crog/m/hosted_test_refactor) $